{
    "recordsTotal": 50,
    "recordsFiltered": 50,
    "draw": 2,
    "data": [
        {
            "statu": "Ba\u015far\u0131l\u0131",
            "is_error": false,
            "start_time": "2025/06/29 23:57:35",
            "cancelled_by": "",
            "url": "https://s3.eu-west-1.amazonaws.com/cdn-tekbas/report_excel/cc9ff766-6a14-49a1-9c9e-e7826742cc68/customer_list_2025-06-29_23-58-41.xls",
            "created_at": "29/06/2025 23:57:35",
            "data_query": "select customer_id, external_id, name, email, birthday, gender, is_corporate, is_fraud, created_at, country, city, --10\n        source, first_name, last_name, b_address_title, s_address_title, tc_kimlik_no, tax_office, tax_no, phone, --19\n        phone2, is_subscribed, sms_notification, call_notification, push_notification, invite_code, invitation_limit, --26\n        is_vip, is_einvoice, discount, description, shipping_priority, segment, --32\n        price_group, is_active, is_cancelled, customer_group, integration_external_id --37\n        FROM\n        (select\n            c.id as customer_id\n            , c.external_id as external_id\n            , c.name as name\n            , c.email as email\n            , c.birthday as birthday\n            , c.gender as gender\n            , c.is_corporate as is_corporate\n            , c.is_fraud as is_fraud\n            , c.created_at as created_at\n            , baco.name as country\n            , bac.name as city\n            , c.source as source\n            , c.first_name as first_name\n            , c.last_name as last_name\n            , ba.address_title as b_address_title\n            , sa.address_title as s_address_title\n            , c.tc_kimlik_no as tc_kimlik_no\n            , c.tax_office as tax_office\n            , c.tax_no as tax_no\n            , c.phone as phone\n            , c.phone2 as phone2\n            , c.is_subscribed as is_subscribed\n            , c.sms_notification as sms_notification\n            , c.call_notification as call_notification\n            , c.push_notification as push_notification\n            , c.invite_code as invite_code\n            , c.invitation_limit as invitation_limit\n            , c.is_vip as is_vip\n            , c.is_einvoice as is_einvoice\n            , c.discount as discount\n            , c.description as description\n            , c.shipping_priority as shipping_priority\n            , st.name as segment\n            ,(select pg.name \n                from  mainproduct_pricegroup pg\n                where pg.id = c.price_group_id) as price_group\n            , c.is_active as is_active\n            , c.is_cancelled as is_cancelled\n            , (select cg.name from customer_customergroup cg where cg.id = c.customer_group_id) as customer_group\n            , c.integration_external_id as integration_external_id\n        from customer_customer c\n        left join customer_customeraddress bca on c.billing_address_id = bca.id\n        left join address_address ba on bca.address_id = ba.id\n        left join address_city bac on ba.city_id = bac.id\n        left join address_country baco on bac.country_id = baco.id\n        left join customer_customeraddress sca on c.shipping_address_id = sca.id\n        left join address_address sa on sca.address_id = sa.id\n        left join customer_segmentation st on c.segmentation_id = st.id                \n        where 1 = 1\n        \n    ) as foo\n    where true\n    \n    order by customer_id desc \n \n \n Filters \n \n ",
            "created_by": "can",
            "deleted_by": "",
            "page_name": "M\u00fc\u015fteri Listesi Exceli",
            "end_time": "2025/06/29 23:58:41",
            "difference_text": "0:01:06",
            "cancelled_at": "",
            "is_deleted_from_storage": false,
            "unique_code": "748586f8-62d5-42b9-80c9-eff71cec5be2",
            "slug": "",
            "deleted_at": "",
            "id": "167"
        },
        {
            "statu": "Ba\u015far\u0131l\u0131",
            "is_error": false,
            "start_time": "2025/06/20 15:20:10",
            "cancelled_by": "",
            "url": "https://s3.eu-west-1.amazonaws.com/cdn-tekbas/report_excel/a5af06a7-a916-44d1-b8e6-de8c381eea14/2025-06 HAMURLABS_2025-06-20_15-20-10.xls",
            "created_at": "20/06/2025 15:20:10",
            "data_query": "select * from ( \n            SELECT\n                invoice_invoice.id as invoice_id,\n                invoice_invoice.serial_no,\n                invoice_invoice.no,\n                invoice_invoice.is_sent invoice_is_sent,\n                invoice_invoice.options->'customer_supplier', -- (case when invoice_invoice.supplier_id is not Null then (select name from supplier_supplier where id = invoice_invoice.supplier_id) else (SELECT -- -- name FROM customer_customer WHERE id = invoice_invoice.customer_id) end) as supplier_customer,\n                invoice_invoice.date,\n                invoice_invoice.time,\n                invoice_invoice.type as invoice_type,\n                invoice_invoice.is_waybill,\n                invoice_invoice.total_price,\n                invoice_invoice.total_discount_without_vat,\n                invoice_invoice.total_discount,\n                invoice_invoice.total_vat,\n                invoice_invoice.total,\n                invoice_invoice.is_cancelled invoice_state,\n                order_order.id as order_id,\n                order_order.tracker_code,\n                order_order.options->'customer_name', --(SELECT name FROM customer_customer WHERE id = invoice_invoice.customer_id),\n                order_order.is_cargo_sent,\n                order_order.is_closed,\n                order_order.is_cancelled as o_is_cancelled,\n                order_order.type as order_type,\n                invoice_invoice.options->'full_returned' as full_returned, -- CASE WHEN (SELECT COUNT(*) FROM invoice_invoice WHERE invoice_invoice.order_id = order_order.id AND is_full_return) > 0 THEN true ELSE false END as full_returned,\n                invoice_invoice.total_quantity as adet, --(select SUM(ip.quantity) from invoice_invoiceproducts ip where ip.invoice_id = invoice_invoice.id) adet,\n                -- (select array_to_string(array_agg(i.serial_no||i.no),',')\n                --     from invoice_invoice as i, invoice_invoice_reference_invoices as ri\n                --     where ri.from_invoice_id=invoice_invoice.id\n                --     and i.id=ri.to_invoice_id) as reference_invoice,\n                invoice_invoice.options->'reference_invoices' as reference_invoice,\n                order_order.created_at as order_date,\n                invoice_invoice.options->'reference_invoice_date' as referans_fatura_tarih, \n                -- (select i.date\n                --    from invoice_invoice as i, invoice_invoice_reference_invoices as ri\n                --    where ri.from_invoice_id=invoice_invoice.id\n                --    and i.id=ri.to_invoice_id and i.type = 7 LIMIT 1) as referans_fatura_tarih,\n               invoice_invoice.is_consignment,\n               invoice_invoice.is_approved,\n               order_order.external_tracker_code,\n               order_order.name,\n               order_order.is_sent order_is_sent,\n               invoice_invoice.invoice_numbers,\n               invoice_invoice.options->'currency' as currency, -- (select currency_currency.name from currency_currency Where id=invoice_invoice.currency_id) as currency,\n               case when (SELECT COUNT(bi.id) FROM order_orderpackage bi WHERE bi.order_id = order_order.id ) = 0 then coalesce((order_order.options->'box_count')::bigint,1) else (SELECT COUNT(bi.id) FROM order_orderpackage bi WHERE bi.order_id = order_order.id ) end\n               \n               ,order_order.options->'courier' -- c.name\n               ,coalesce((SELECT cty.name  FROM address_address adres, address_city cty where adres.id=order_order.shipping_address_id and cty.id = adres.city_id ),'') as city  \n    \t\t   ,order_order.options->'shop' as shop\n               ,order_order.source as order_source\n               ,coalesce((SELECT com.name FROM company_company com where com.id = order_order.company_id),'') as company\n               ,coalesce((SELECT sum(ip.quantity) FROM invoice_invoiceproducts ip where ip.invoice_id = invoice_invoice.id),0) as invoice_total_quantity\n                     \n               ,coalesce((SELECT country.name  FROM address_address adres, address_city cty, address_country country where adres.id=order_order.shipping_address_id and cty.id = adres.city_id and cty.country_id = country.id),'') as country\n               ,order_order.options->'has_selling_return_invoice'\n               ,order_order.created_at\n               ,invoice_invoice.ettn\n               \n\n    \n            FROM invoice_invoice INNER JOIN order_order ON invoice_invoice.order_id = order_order.id\n            LEFT JOIN company_company company ON company.id = order_order.company_id\n            \n            \n                \n            -- LEFT JOIN cargo_courier c ON c.id = order_order.courier_id\n        where 1=1  and invoice_invoice.date BETWEEN '2025-06-01 00:00:00' AND '2025-06-30 23:59:59' ) as foo  \n \n \n Filters \n \n where 1=1  and invoice_invoice.date BETWEEN '2025-06-01 00:00:00' AND '2025-06-30 23:59:59'",
            "created_by": "ismail.ala",
            "deleted_by": "",
            "page_name": "Fatura Listesi",
            "end_time": "2025/06/20 15:20:10",
            "difference_text": "0:00:00",
            "cancelled_at": "",
            "is_deleted_from_storage": false,
            "unique_code": "54132f29-e17a-408d-b448-e844c34ee82a",
            "slug": "2025-06 HAMURLABS",
            "deleted_at": "",
            "id": "166"
        },
        {
            "statu": "Ba\u015far\u0131l\u0131",
            "is_error": false,
            "start_time": "2025/06/02 14:39:30",
            "cancelled_by": "",
            "url": "https://s3.eu-west-1.amazonaws.com/cdn-tekbas/report_excel/ea0e44c1-fbf2-4217-9158-78c0a132d6b7/MAYIS_2025-06-02_14-39-31.xls",
            "created_at": "02/06/2025 14:39:30",
            "data_query": "select * from ( \n            SELECT\n                invoice_invoice.id as invoice_id,\n                invoice_invoice.serial_no,\n                invoice_invoice.no,\n                invoice_invoice.is_sent invoice_is_sent,\n                invoice_invoice.options->'customer_supplier', -- (case when invoice_invoice.supplier_id is not Null then (select name from supplier_supplier where id = invoice_invoice.supplier_id) else (SELECT -- -- name FROM customer_customer WHERE id = invoice_invoice.customer_id) end) as supplier_customer,\n                invoice_invoice.date,\n                invoice_invoice.time,\n                invoice_invoice.type as invoice_type,\n                invoice_invoice.is_waybill,\n                invoice_invoice.total_price,\n                invoice_invoice.total_discount_without_vat,\n                invoice_invoice.total_discount,\n                invoice_invoice.total_vat,\n                invoice_invoice.total,\n                invoice_invoice.is_cancelled invoice_state,\n                order_order.id as order_id,\n                order_order.tracker_code,\n                order_order.options->'customer_name', --(SELECT name FROM customer_customer WHERE id = invoice_invoice.customer_id),\n                order_order.is_cargo_sent,\n                order_order.is_closed,\n                order_order.is_cancelled as o_is_cancelled,\n                order_order.type as order_type,\n                invoice_invoice.options->'full_returned' as full_returned, -- CASE WHEN (SELECT COUNT(*) FROM invoice_invoice WHERE invoice_invoice.order_id = order_order.id AND is_full_return) > 0 THEN true ELSE false END as full_returned,\n                invoice_invoice.total_quantity as adet, --(select SUM(ip.quantity) from invoice_invoiceproducts ip where ip.invoice_id = invoice_invoice.id) adet,\n                -- (select array_to_string(array_agg(i.serial_no||i.no),',')\n                --     from invoice_invoice as i, invoice_invoice_reference_invoices as ri\n                --     where ri.from_invoice_id=invoice_invoice.id\n                --     and i.id=ri.to_invoice_id) as reference_invoice,\n                invoice_invoice.options->'reference_invoices' as reference_invoice,\n                order_order.created_at as order_date,\n                invoice_invoice.options->'reference_invoice_date' as referans_fatura_tarih, \n                -- (select i.date\n                --    from invoice_invoice as i, invoice_invoice_reference_invoices as ri\n                --    where ri.from_invoice_id=invoice_invoice.id\n                --    and i.id=ri.to_invoice_id and i.type = 7 LIMIT 1) as referans_fatura_tarih,\n               invoice_invoice.is_consignment,\n               invoice_invoice.is_approved,\n               order_order.external_tracker_code,\n               order_order.name,\n               order_order.is_sent order_is_sent,\n               invoice_invoice.invoice_numbers,\n               invoice_invoice.options->'currency' as currency, -- (select currency_currency.name from currency_currency Where id=invoice_invoice.currency_id) as currency,\n               case when (SELECT COUNT(bi.id) FROM order_orderpackage bi WHERE bi.order_id = order_order.id ) = 0 then coalesce((order_order.options->'box_count')::bigint,1) else (SELECT COUNT(bi.id) FROM order_orderpackage bi WHERE bi.order_id = order_order.id ) end\n               \n               ,order_order.options->'courier' -- c.name\n               ,coalesce((SELECT cty.name  FROM address_address adres, address_city cty where adres.id=order_order.shipping_address_id and cty.id = adres.city_id ),'') as city  \n    \t\t   ,order_order.options->'shop' as shop\n               ,order_order.source as order_source\n               ,coalesce((SELECT com.name FROM company_company com where com.id = order_order.company_id),'') as company\n               ,coalesce((SELECT sum(ip.quantity) FROM invoice_invoiceproducts ip where ip.invoice_id = invoice_invoice.id),0) as invoice_total_quantity\n                     \n               ,coalesce((SELECT country.name  FROM address_address adres, address_city cty, address_country country where adres.id=order_order.shipping_address_id and cty.id = adres.city_id and cty.country_id = country.id),'') as country\n               ,order_order.options->'has_selling_return_invoice'\n               ,order_order.created_at\n               ,invoice_invoice.ettn\n               \n\n    \n            FROM invoice_invoice INNER JOIN order_order ON invoice_invoice.order_id = order_order.id\n            LEFT JOIN company_company company ON company.id = order_order.company_id\n            \n            \n                \n            -- LEFT JOIN cargo_courier c ON c.id = order_order.courier_id\n        where 1=1  and invoice_invoice.date BETWEEN '2025-05-01 00:00:00' AND '2025-05-31 23:59:59' ) as foo  \n \n \n Filters \n \n where 1=1  and invoice_invoice.date BETWEEN '2025-05-01 00:00:00' AND '2025-05-31 23:59:59'",
            "created_by": "ismail.ala",
            "deleted_by": "",
            "page_name": "Fatura Listesi",
            "end_time": "2025/06/02 14:39:31",
            "difference_text": "0:00:01",
            "cancelled_at": "",
            "is_deleted_from_storage": false,
            "unique_code": "77155c95-46b8-4e4a-8642-ed6e7e4e41ff",
            "slug": "MAYIS",
            "deleted_at": "",
            "id": "165"
        },
        {
            "statu": "Ba\u015far\u0131l\u0131",
            "is_error": false,
            "start_time": "2025/06/02 08:44:30",
            "cancelled_by": "",
            "url": "https://s3.eu-west-1.amazonaws.com/cdn-tekbas/report_excel/4da8b27d-39b4-475f-8d69-90a915a9cb2c/invoice_list_2025-06-02_08-44-30.xls",
            "created_at": "02/06/2025 08:44:30",
            "data_query": "select * from ( \n            SELECT\n                invoice_invoice.id as invoice_id,\n                invoice_invoice.serial_no,\n                invoice_invoice.no,\n                invoice_invoice.is_sent invoice_is_sent,\n                invoice_invoice.options->'customer_supplier', -- (case when invoice_invoice.supplier_id is not Null then (select name from supplier_supplier where id = invoice_invoice.supplier_id) else (SELECT -- -- name FROM customer_customer WHERE id = invoice_invoice.customer_id) end) as supplier_customer,\n                invoice_invoice.date,\n                invoice_invoice.time,\n                invoice_invoice.type as invoice_type,\n                invoice_invoice.is_waybill,\n                invoice_invoice.total_price,\n                invoice_invoice.total_discount_without_vat,\n                invoice_invoice.total_discount,\n                invoice_invoice.total_vat,\n                invoice_invoice.total,\n                invoice_invoice.is_cancelled invoice_state,\n                order_order.id as order_id,\n                order_order.tracker_code,\n                order_order.options->'customer_name', --(SELECT name FROM customer_customer WHERE id = invoice_invoice.customer_id),\n                order_order.is_cargo_sent,\n                order_order.is_closed,\n                order_order.is_cancelled as o_is_cancelled,\n                order_order.type as order_type,\n                invoice_invoice.options->'full_returned' as full_returned, -- CASE WHEN (SELECT COUNT(*) FROM invoice_invoice WHERE invoice_invoice.order_id = order_order.id AND is_full_return) > 0 THEN true ELSE false END as full_returned,\n                invoice_invoice.total_quantity as adet, --(select SUM(ip.quantity) from invoice_invoiceproducts ip where ip.invoice_id = invoice_invoice.id) adet,\n                -- (select array_to_string(array_agg(i.serial_no||i.no),',')\n                --     from invoice_invoice as i, invoice_invoice_reference_invoices as ri\n                --     where ri.from_invoice_id=invoice_invoice.id\n                --     and i.id=ri.to_invoice_id) as reference_invoice,\n                invoice_invoice.options->'reference_invoices' as reference_invoice,\n                order_order.created_at as order_date,\n                invoice_invoice.options->'reference_invoice_date' as referans_fatura_tarih, \n                -- (select i.date\n                --    from invoice_invoice as i, invoice_invoice_reference_invoices as ri\n                --    where ri.from_invoice_id=invoice_invoice.id\n                --    and i.id=ri.to_invoice_id and i.type = 7 LIMIT 1) as referans_fatura_tarih,\n               invoice_invoice.is_consignment,\n               invoice_invoice.is_approved,\n               order_order.external_tracker_code,\n               order_order.name,\n               order_order.is_sent order_is_sent,\n               invoice_invoice.invoice_numbers,\n               invoice_invoice.options->'currency' as currency, -- (select currency_currency.name from currency_currency Where id=invoice_invoice.currency_id) as currency,\n               case when (SELECT COUNT(bi.id) FROM order_orderpackage bi WHERE bi.order_id = order_order.id ) = 0 then coalesce((order_order.options->'box_count')::bigint,1) else (SELECT COUNT(bi.id) FROM order_orderpackage bi WHERE bi.order_id = order_order.id ) end\n               \n               ,order_order.options->'courier' -- c.name\n               ,coalesce((SELECT cty.name  FROM address_address adres, address_city cty where adres.id=order_order.shipping_address_id and cty.id = adres.city_id ),'') as city  \n    \t\t   ,order_order.options->'shop' as shop\n               ,order_order.source as order_source\n               ,coalesce((SELECT com.name FROM company_company com where com.id = order_order.company_id),'') as company\n               ,coalesce((SELECT sum(ip.quantity) FROM invoice_invoiceproducts ip where ip.invoice_id = invoice_invoice.id),0) as invoice_total_quantity\n                     \n               ,coalesce((SELECT country.name  FROM address_address adres, address_city cty, address_country country where adres.id=order_order.shipping_address_id and cty.id = adres.city_id and cty.country_id = country.id),'') as country\n               ,order_order.options->'has_selling_return_invoice'\n               ,order_order.created_at\n               ,invoice_invoice.ettn\n               \n\n    \n            FROM invoice_invoice INNER JOIN order_order ON invoice_invoice.order_id = order_order.id\n            LEFT JOIN company_company company ON company.id = order_order.company_id\n            \n            \n                \n            -- LEFT JOIN cargo_courier c ON c.id = order_order.courier_id\n        where 1=1  and invoice_invoice.date BETWEEN '2025-05-30 00:00:00' AND '2025-05-31 23:59:59' ) as foo  \n \n \n Filters \n \n where 1=1  and invoice_invoice.date BETWEEN '2025-05-30 00:00:00' AND '2025-05-31 23:59:59'",
            "created_by": "ismail.ala",
            "deleted_by": "",
            "page_name": "Fatura Listesi",
            "end_time": "2025/06/02 08:44:30",
            "difference_text": "0:00:00",
            "cancelled_at": "",
            "is_deleted_from_storage": false,
            "unique_code": "ccb01774-9a40-4fc8-a198-7a10036b256f",
            "slug": "",
            "deleted_at": "",
            "id": "164"
        },
        {
            "statu": "Ba\u015far\u0131l\u0131",
            "is_error": false,
            "start_time": "2025/05/30 09:37:05",
            "cancelled_by": "",
            "url": "https://s3.eu-west-1.amazonaws.com/cdn-tekbas/report_excel/3d22b206-060e-4e15-88dc-042f171ac72d/invoice_list_2025-05-30_09-37-06.xls",
            "created_at": "30/05/2025 09:37:05",
            "data_query": "select * from ( \n            SELECT\n                invoice_invoice.id as invoice_id,\n                invoice_invoice.serial_no,\n                invoice_invoice.no,\n                invoice_invoice.is_sent invoice_is_sent,\n                invoice_invoice.options->'customer_supplier', -- (case when invoice_invoice.supplier_id is not Null then (select name from supplier_supplier where id = invoice_invoice.supplier_id) else (SELECT -- -- name FROM customer_customer WHERE id = invoice_invoice.customer_id) end) as supplier_customer,\n                invoice_invoice.date,\n                invoice_invoice.time,\n                invoice_invoice.type as invoice_type,\n                invoice_invoice.is_waybill,\n                invoice_invoice.total_price,\n                invoice_invoice.total_discount_without_vat,\n                invoice_invoice.total_discount,\n                invoice_invoice.total_vat,\n                invoice_invoice.total,\n                invoice_invoice.is_cancelled invoice_state,\n                order_order.id as order_id,\n                order_order.tracker_code,\n                order_order.options->'customer_name', --(SELECT name FROM customer_customer WHERE id = invoice_invoice.customer_id),\n                order_order.is_cargo_sent,\n                order_order.is_closed,\n                order_order.is_cancelled as o_is_cancelled,\n                order_order.type as order_type,\n                invoice_invoice.options->'full_returned' as full_returned, -- CASE WHEN (SELECT COUNT(*) FROM invoice_invoice WHERE invoice_invoice.order_id = order_order.id AND is_full_return) > 0 THEN true ELSE false END as full_returned,\n                invoice_invoice.total_quantity as adet, --(select SUM(ip.quantity) from invoice_invoiceproducts ip where ip.invoice_id = invoice_invoice.id) adet,\n                -- (select array_to_string(array_agg(i.serial_no||i.no),',')\n                --     from invoice_invoice as i, invoice_invoice_reference_invoices as ri\n                --     where ri.from_invoice_id=invoice_invoice.id\n                --     and i.id=ri.to_invoice_id) as reference_invoice,\n                invoice_invoice.options->'reference_invoices' as reference_invoice,\n                order_order.created_at as order_date,\n                invoice_invoice.options->'reference_invoice_date' as referans_fatura_tarih, \n                -- (select i.date\n                --    from invoice_invoice as i, invoice_invoice_reference_invoices as ri\n                --    where ri.from_invoice_id=invoice_invoice.id\n                --    and i.id=ri.to_invoice_id and i.type = 7 LIMIT 1) as referans_fatura_tarih,\n               invoice_invoice.is_consignment,\n               invoice_invoice.is_approved,\n               order_order.external_tracker_code,\n               order_order.name,\n               order_order.is_sent order_is_sent,\n               invoice_invoice.invoice_numbers,\n               invoice_invoice.options->'currency' as currency, -- (select currency_currency.name from currency_currency Where id=invoice_invoice.currency_id) as currency,\n               case when (SELECT COUNT(bi.id) FROM order_orderpackage bi WHERE bi.order_id = order_order.id ) = 0 then coalesce((order_order.options->'box_count')::bigint,1) else (SELECT COUNT(bi.id) FROM order_orderpackage bi WHERE bi.order_id = order_order.id ) end\n               \n               ,order_order.options->'courier' -- c.name\n               ,coalesce((SELECT cty.name  FROM address_address adres, address_city cty where adres.id=order_order.shipping_address_id and cty.id = adres.city_id ),'') as city  \n    \t\t   ,order_order.options->'shop' as shop\n               ,order_order.source as order_source\n               ,coalesce((SELECT com.name FROM company_company com where com.id = order_order.company_id),'') as company\n               ,coalesce((SELECT sum(ip.quantity) FROM invoice_invoiceproducts ip where ip.invoice_id = invoice_invoice.id),0) as invoice_total_quantity\n                     \n               ,coalesce((SELECT country.name  FROM address_address adres, address_city cty, address_country country where adres.id=order_order.shipping_address_id and cty.id = adres.city_id and cty.country_id = country.id),'') as country\n               ,order_order.options->'has_selling_return_invoice'\n               ,order_order.created_at\n               ,invoice_invoice.ettn\n               \n\n    \n            FROM invoice_invoice INNER JOIN order_order ON invoice_invoice.order_id = order_order.id\n            LEFT JOIN company_company company ON company.id = order_order.company_id\n            \n            \n                \n            -- LEFT JOIN cargo_courier c ON c.id = order_order.courier_id\n        where 1=1  and invoice_invoice.date BETWEEN '2025-05-01 00:00:00' AND '2025-05-31 23:59:59' ) as foo  \n \n \n Filters \n \n where 1=1  and invoice_invoice.date BETWEEN '2025-05-01 00:00:00' AND '2025-05-31 23:59:59'",
            "created_by": "ismail.ala",
            "deleted_by": "",
            "page_name": "Fatura Listesi",
            "end_time": "2025/05/30 09:37:06",
            "difference_text": "0:00:01",
            "cancelled_at": "",
            "is_deleted_from_storage": false,
            "unique_code": "0e962867-2793-44da-9564-4ed6c2d9b35b",
            "slug": "",
            "deleted_at": "",
            "id": "163"
        },
        {
            "statu": "Ba\u015far\u0131l\u0131",
            "is_error": false,
            "start_time": "2025/05/07 17:18:58",
            "cancelled_by": "",
            "url": "https://s3.eu-west-1.amazonaws.com/cdn-tekbas/report_excel/e8c40174-0ff7-4ee0-b17f-5e4098618359/T-SOFT B\u0130 FATURA_2025-05-07_17-18-58.xls",
            "created_at": "07/05/2025 17:18:58",
            "data_query": "select * from ( \n            SELECT\n                invoice_invoice.id as invoice_id,\n                invoice_invoice.serial_no,\n                invoice_invoice.no,\n                invoice_invoice.is_sent invoice_is_sent,\n                invoice_invoice.options->'customer_supplier', -- (case when invoice_invoice.supplier_id is not Null then (select name from supplier_supplier where id = invoice_invoice.supplier_id) else (SELECT -- -- name FROM customer_customer WHERE id = invoice_invoice.customer_id) end) as supplier_customer,\n                invoice_invoice.date,\n                invoice_invoice.time,\n                invoice_invoice.type as invoice_type,\n                invoice_invoice.is_waybill,\n                invoice_invoice.total_price,\n                invoice_invoice.total_discount_without_vat,\n                invoice_invoice.total_discount,\n                invoice_invoice.total_vat,\n                invoice_invoice.total,\n                invoice_invoice.is_cancelled invoice_state,\n                order_order.id as order_id,\n                order_order.tracker_code,\n                order_order.options->'customer_name', --(SELECT name FROM customer_customer WHERE id = invoice_invoice.customer_id),\n                order_order.is_cargo_sent,\n                order_order.is_closed,\n                order_order.is_cancelled as o_is_cancelled,\n                order_order.type as order_type,\n                invoice_invoice.options->'full_returned' as full_returned, -- CASE WHEN (SELECT COUNT(*) FROM invoice_invoice WHERE invoice_invoice.order_id = order_order.id AND is_full_return) > 0 THEN true ELSE false END as full_returned,\n                invoice_invoice.total_quantity as adet, --(select SUM(ip.quantity) from invoice_invoiceproducts ip where ip.invoice_id = invoice_invoice.id) adet,\n                -- (select array_to_string(array_agg(i.serial_no||i.no),',')\n                --     from invoice_invoice as i, invoice_invoice_reference_invoices as ri\n                --     where ri.from_invoice_id=invoice_invoice.id\n                --     and i.id=ri.to_invoice_id) as reference_invoice,\n                invoice_invoice.options->'reference_invoices' as reference_invoice,\n                order_order.created_at as order_date,\n                invoice_invoice.options->'reference_invoice_date' as referans_fatura_tarih, \n                -- (select i.date\n                --    from invoice_invoice as i, invoice_invoice_reference_invoices as ri\n                --    where ri.from_invoice_id=invoice_invoice.id\n                --    and i.id=ri.to_invoice_id and i.type = 7 LIMIT 1) as referans_fatura_tarih,\n               invoice_invoice.is_consignment,\n               invoice_invoice.is_approved,\n               order_order.external_tracker_code,\n               order_order.name,\n               order_order.is_sent order_is_sent,\n               invoice_invoice.invoice_numbers,\n               invoice_invoice.options->'currency' as currency, -- (select currency_currency.name from currency_currency Where id=invoice_invoice.currency_id) as currency,\n               case when (SELECT COUNT(bi.id) FROM order_orderpackage bi WHERE bi.order_id = order_order.id ) = 0 then coalesce((order_order.options->'box_count')::bigint,1) else (SELECT COUNT(bi.id) FROM order_orderpackage bi WHERE bi.order_id = order_order.id ) end\n               \n               ,order_order.options->'courier' -- c.name\n               ,coalesce((SELECT cty.name  FROM address_address adres, address_city cty where adres.id=order_order.shipping_address_id and cty.id = adres.city_id ),'') as city  \n    \t\t   ,order_order.options->'shop' as shop\n               ,order_order.source as order_source\n               ,coalesce((SELECT com.name FROM company_company com where com.id = order_order.company_id),'') as company\n               ,coalesce((SELECT sum(ip.quantity) FROM invoice_invoiceproducts ip where ip.invoice_id = invoice_invoice.id),0) as invoice_total_quantity\n                     \n               ,coalesce((SELECT country.name  FROM address_address adres, address_city cty, address_country country where adres.id=order_order.shipping_address_id and cty.id = adres.city_id and cty.country_id = country.id),'') as country\n               ,order_order.options->'has_selling_return_invoice'\n               ,order_order.created_at\n               ,invoice_invoice.ettn\n               \n\n    \n            FROM invoice_invoice INNER JOIN order_order ON invoice_invoice.order_id = order_order.id\n            LEFT JOIN company_company company ON company.id = order_order.company_id\n            \n            \n                \n            -- LEFT JOIN cargo_courier c ON c.id = order_order.courier_id\n        where 1=1  AND order_order.shop_id = 7  and invoice_invoice.date BETWEEN '2025-04-01 00:00:00' AND '2025-04-30 23:59:59' ) as foo  \n \n \n Filters \n \n where 1=1  AND order_order.shop_id = 7  and invoice_invoice.date BETWEEN '2025-04-01 00:00:00' AND '2025-04-30 23:59:59'",
            "created_by": "ismail.ala",
            "deleted_by": "",
            "page_name": "Fatura Listesi",
            "end_time": "2025/05/07 17:18:58",
            "difference_text": "0:00:00",
            "cancelled_at": "",
            "is_deleted_from_storage": false,
            "unique_code": "98792c44-43b4-46f5-9c94-5b308d531fa2",
            "slug": "T-SOFT B\u0130 FATURA",
            "deleted_at": "",
            "id": "162"
        },
        {
            "statu": "Ba\u015far\u0131l\u0131",
            "is_error": false,
            "start_time": "2025/05/07 17:02:50",
            "cancelled_by": "",
            "url": "https://s3.eu-west-1.amazonaws.com/cdn-tekbas/report_excel/b9238cdb-d608-4f4f-8f31-b1c698ee157b/04-2025,,,,_2025-05-07_17-02-51.xls",
            "created_at": "07/05/2025 17:02:50",
            "data_query": "select * from ( \n            SELECT\n                invoice_invoice.id as invoice_id,\n                invoice_invoice.serial_no,\n                invoice_invoice.no,\n                invoice_invoice.is_sent invoice_is_sent,\n                invoice_invoice.options->'customer_supplier', -- (case when invoice_invoice.supplier_id is not Null then (select name from supplier_supplier where id = invoice_invoice.supplier_id) else (SELECT -- -- name FROM customer_customer WHERE id = invoice_invoice.customer_id) end) as supplier_customer,\n                invoice_invoice.date,\n                invoice_invoice.time,\n                invoice_invoice.type as invoice_type,\n                invoice_invoice.is_waybill,\n                invoice_invoice.total_price,\n                invoice_invoice.total_discount_without_vat,\n                invoice_invoice.total_discount,\n                invoice_invoice.total_vat,\n                invoice_invoice.total,\n                invoice_invoice.is_cancelled invoice_state,\n                order_order.id as order_id,\n                order_order.tracker_code,\n                order_order.options->'customer_name', --(SELECT name FROM customer_customer WHERE id = invoice_invoice.customer_id),\n                order_order.is_cargo_sent,\n                order_order.is_closed,\n                order_order.is_cancelled as o_is_cancelled,\n                order_order.type as order_type,\n                invoice_invoice.options->'full_returned' as full_returned, -- CASE WHEN (SELECT COUNT(*) FROM invoice_invoice WHERE invoice_invoice.order_id = order_order.id AND is_full_return) > 0 THEN true ELSE false END as full_returned,\n                invoice_invoice.total_quantity as adet, --(select SUM(ip.quantity) from invoice_invoiceproducts ip where ip.invoice_id = invoice_invoice.id) adet,\n                -- (select array_to_string(array_agg(i.serial_no||i.no),',')\n                --     from invoice_invoice as i, invoice_invoice_reference_invoices as ri\n                --     where ri.from_invoice_id=invoice_invoice.id\n                --     and i.id=ri.to_invoice_id) as reference_invoice,\n                invoice_invoice.options->'reference_invoices' as reference_invoice,\n                order_order.created_at as order_date,\n                invoice_invoice.options->'reference_invoice_date' as referans_fatura_tarih, \n                -- (select i.date\n                --    from invoice_invoice as i, invoice_invoice_reference_invoices as ri\n                --    where ri.from_invoice_id=invoice_invoice.id\n                --    and i.id=ri.to_invoice_id and i.type = 7 LIMIT 1) as referans_fatura_tarih,\n               invoice_invoice.is_consignment,\n               invoice_invoice.is_approved,\n               order_order.external_tracker_code,\n               order_order.name,\n               order_order.is_sent order_is_sent,\n               invoice_invoice.invoice_numbers,\n               invoice_invoice.options->'currency' as currency, -- (select currency_currency.name from currency_currency Where id=invoice_invoice.currency_id) as currency,\n               case when (SELECT COUNT(bi.id) FROM order_orderpackage bi WHERE bi.order_id = order_order.id ) = 0 then coalesce((order_order.options->'box_count')::bigint,1) else (SELECT COUNT(bi.id) FROM order_orderpackage bi WHERE bi.order_id = order_order.id ) end\n               \n               ,order_order.options->'courier' -- c.name\n               ,coalesce((SELECT cty.name  FROM address_address adres, address_city cty where adres.id=order_order.shipping_address_id and cty.id = adres.city_id ),'') as city  \n    \t\t   ,order_order.options->'shop' as shop\n               ,order_order.source as order_source\n               ,coalesce((SELECT com.name FROM company_company com where com.id = order_order.company_id),'') as company\n               ,coalesce((SELECT sum(ip.quantity) FROM invoice_invoiceproducts ip where ip.invoice_id = invoice_invoice.id),0) as invoice_total_quantity\n                     \n               ,coalesce((SELECT country.name  FROM address_address adres, address_city cty, address_country country where adres.id=order_order.shipping_address_id and cty.id = adres.city_id and cty.country_id = country.id),'') as country\n               ,order_order.options->'has_selling_return_invoice'\n               ,order_order.created_at\n               ,invoice_invoice.ettn\n               \n\n    \n            FROM invoice_invoice INNER JOIN order_order ON invoice_invoice.order_id = order_order.id\n            LEFT JOIN company_company company ON company.id = order_order.company_id\n            \n            \n                \n            -- LEFT JOIN cargo_courier c ON c.id = order_order.courier_id\n        where 1=1  and invoice_invoice.date BETWEEN '2025-04-01 00:00:00' AND '2025-04-30 23:59:59' ) as foo  \n \n \n Filters \n \n where 1=1  and invoice_invoice.date BETWEEN '2025-04-01 00:00:00' AND '2025-04-30 23:59:59'",
            "created_by": "ismail.ala",
            "deleted_by": "",
            "page_name": "Fatura Listesi",
            "end_time": "2025/05/07 17:02:51",
            "difference_text": "0:00:01",
            "cancelled_at": "",
            "is_deleted_from_storage": false,
            "unique_code": "7b4333d0-d5b7-40a1-8148-0b88656f245d",
            "slug": "04-2025,,,,",
            "deleted_at": "",
            "id": "161"
        },
        {
            "statu": "Ba\u015far\u0131l\u0131",
            "is_error": false,
            "start_time": "2025/05/07 13:59:45",
            "cancelled_by": "",
            "url": "https://s3.eu-west-1.amazonaws.com/cdn-tekbas/report_excel/285dba33-cb5d-4d5f-9318-9a68c94a75ee/2025-04_2025-05-07_13-59-46.xls",
            "created_at": "07/05/2025 13:59:45",
            "data_query": "select * from ( \n            SELECT\n                invoice_invoice.id as invoice_id,\n                invoice_invoice.serial_no,\n                invoice_invoice.no,\n                invoice_invoice.is_sent invoice_is_sent,\n                invoice_invoice.options->'customer_supplier', -- (case when invoice_invoice.supplier_id is not Null then (select name from supplier_supplier where id = invoice_invoice.supplier_id) else (SELECT -- -- name FROM customer_customer WHERE id = invoice_invoice.customer_id) end) as supplier_customer,\n                invoice_invoice.date,\n                invoice_invoice.time,\n                invoice_invoice.type as invoice_type,\n                invoice_invoice.is_waybill,\n                invoice_invoice.total_price,\n                invoice_invoice.total_discount_without_vat,\n                invoice_invoice.total_discount,\n                invoice_invoice.total_vat,\n                invoice_invoice.total,\n                invoice_invoice.is_cancelled invoice_state,\n                order_order.id as order_id,\n                order_order.tracker_code,\n                order_order.options->'customer_name', --(SELECT name FROM customer_customer WHERE id = invoice_invoice.customer_id),\n                order_order.is_cargo_sent,\n                order_order.is_closed,\n                order_order.is_cancelled as o_is_cancelled,\n                order_order.type as order_type,\n                invoice_invoice.options->'full_returned' as full_returned, -- CASE WHEN (SELECT COUNT(*) FROM invoice_invoice WHERE invoice_invoice.order_id = order_order.id AND is_full_return) > 0 THEN true ELSE false END as full_returned,\n                invoice_invoice.total_quantity as adet, --(select SUM(ip.quantity) from invoice_invoiceproducts ip where ip.invoice_id = invoice_invoice.id) adet,\n                -- (select array_to_string(array_agg(i.serial_no||i.no),',')\n                --     from invoice_invoice as i, invoice_invoice_reference_invoices as ri\n                --     where ri.from_invoice_id=invoice_invoice.id\n                --     and i.id=ri.to_invoice_id) as reference_invoice,\n                invoice_invoice.options->'reference_invoices' as reference_invoice,\n                order_order.created_at as order_date,\n                invoice_invoice.options->'reference_invoice_date' as referans_fatura_tarih, \n                -- (select i.date\n                --    from invoice_invoice as i, invoice_invoice_reference_invoices as ri\n                --    where ri.from_invoice_id=invoice_invoice.id\n                --    and i.id=ri.to_invoice_id and i.type = 7 LIMIT 1) as referans_fatura_tarih,\n               invoice_invoice.is_consignment,\n               invoice_invoice.is_approved,\n               order_order.external_tracker_code,\n               order_order.name,\n               order_order.is_sent order_is_sent,\n               invoice_invoice.invoice_numbers,\n               invoice_invoice.options->'currency' as currency, -- (select currency_currency.name from currency_currency Where id=invoice_invoice.currency_id) as currency,\n               case when (SELECT COUNT(bi.id) FROM order_orderpackage bi WHERE bi.order_id = order_order.id ) = 0 then coalesce((order_order.options->'box_count')::bigint,1) else (SELECT COUNT(bi.id) FROM order_orderpackage bi WHERE bi.order_id = order_order.id ) end\n               \n               ,order_order.options->'courier' -- c.name\n               ,coalesce((SELECT cty.name  FROM address_address adres, address_city cty where adres.id=order_order.shipping_address_id and cty.id = adres.city_id ),'') as city  \n    \t\t   ,order_order.options->'shop' as shop\n               ,order_order.source as order_source\n               ,coalesce((SELECT com.name FROM company_company com where com.id = order_order.company_id),'') as company\n               ,coalesce((SELECT sum(ip.quantity) FROM invoice_invoiceproducts ip where ip.invoice_id = invoice_invoice.id),0) as invoice_total_quantity\n                     \n               ,coalesce((SELECT country.name  FROM address_address adres, address_city cty, address_country country where adres.id=order_order.shipping_address_id and cty.id = adres.city_id and cty.country_id = country.id),'') as country\n               ,order_order.options->'has_selling_return_invoice'\n               ,order_order.created_at\n               ,invoice_invoice.ettn\n               \n\n    \n            FROM invoice_invoice INNER JOIN order_order ON invoice_invoice.order_id = order_order.id\n            LEFT JOIN company_company company ON company.id = order_order.company_id\n            \n            \n                \n            -- LEFT JOIN cargo_courier c ON c.id = order_order.courier_id\n        where 1=1  and invoice_invoice.date BETWEEN '2025-04-01 00:00:00' AND '2025-04-30 23:59:59' ) as foo  \n \n \n Filters \n \n where 1=1  and invoice_invoice.date BETWEEN '2025-04-01 00:00:00' AND '2025-04-30 23:59:59'",
            "created_by": "ismail.ala",
            "deleted_by": "",
            "page_name": "Fatura Listesi",
            "end_time": "2025/05/07 13:59:46",
            "difference_text": "0:00:01",
            "cancelled_at": "",
            "is_deleted_from_storage": false,
            "unique_code": "84caa5d3-f50b-43ec-83f0-eb2b7de37c9a",
            "slug": "2025-04",
            "deleted_at": "",
            "id": "160"
        },
        {
            "statu": "Ba\u015far\u0131l\u0131",
            "is_error": false,
            "start_time": "2025/05/03 12:50:57",
            "cancelled_by": "",
            "url": "https://s3.eu-west-1.amazonaws.com/cdn-tekbas/report_excel/8cf907f9-45db-437a-9579-8312d562c524/N\u0130SAN-HAMURLABS_2025-05-03_12-50-58.xls",
            "created_at": "03/05/2025 12:50:57",
            "data_query": "select * from ( \n            SELECT\n                invoice_invoice.id as invoice_id,\n                invoice_invoice.serial_no,\n                invoice_invoice.no,\n                invoice_invoice.is_sent invoice_is_sent,\n                invoice_invoice.options->'customer_supplier', -- (case when invoice_invoice.supplier_id is not Null then (select name from supplier_supplier where id = invoice_invoice.supplier_id) else (SELECT -- -- name FROM customer_customer WHERE id = invoice_invoice.customer_id) end) as supplier_customer,\n                invoice_invoice.date,\n                invoice_invoice.time,\n                invoice_invoice.type as invoice_type,\n                invoice_invoice.is_waybill,\n                invoice_invoice.total_price,\n                invoice_invoice.total_discount_without_vat,\n                invoice_invoice.total_discount,\n                invoice_invoice.total_vat,\n                invoice_invoice.total,\n                invoice_invoice.is_cancelled invoice_state,\n                order_order.id as order_id,\n                order_order.tracker_code,\n                order_order.options->'customer_name', --(SELECT name FROM customer_customer WHERE id = invoice_invoice.customer_id),\n                order_order.is_cargo_sent,\n                order_order.is_closed,\n                order_order.is_cancelled as o_is_cancelled,\n                order_order.type as order_type,\n                invoice_invoice.options->'full_returned' as full_returned, -- CASE WHEN (SELECT COUNT(*) FROM invoice_invoice WHERE invoice_invoice.order_id = order_order.id AND is_full_return) > 0 THEN true ELSE false END as full_returned,\n                invoice_invoice.total_quantity as adet, --(select SUM(ip.quantity) from invoice_invoiceproducts ip where ip.invoice_id = invoice_invoice.id) adet,\n                -- (select array_to_string(array_agg(i.serial_no||i.no),',')\n                --     from invoice_invoice as i, invoice_invoice_reference_invoices as ri\n                --     where ri.from_invoice_id=invoice_invoice.id\n                --     and i.id=ri.to_invoice_id) as reference_invoice,\n                invoice_invoice.options->'reference_invoices' as reference_invoice,\n                order_order.created_at as order_date,\n                invoice_invoice.options->'reference_invoice_date' as referans_fatura_tarih, \n                -- (select i.date\n                --    from invoice_invoice as i, invoice_invoice_reference_invoices as ri\n                --    where ri.from_invoice_id=invoice_invoice.id\n                --    and i.id=ri.to_invoice_id and i.type = 7 LIMIT 1) as referans_fatura_tarih,\n               invoice_invoice.is_consignment,\n               invoice_invoice.is_approved,\n               order_order.external_tracker_code,\n               order_order.name,\n               order_order.is_sent order_is_sent,\n               invoice_invoice.invoice_numbers,\n               invoice_invoice.options->'currency' as currency, -- (select currency_currency.name from currency_currency Where id=invoice_invoice.currency_id) as currency,\n               case when (SELECT COUNT(bi.id) FROM order_orderpackage bi WHERE bi.order_id = order_order.id ) = 0 then coalesce((order_order.options->'box_count')::bigint,1) else (SELECT COUNT(bi.id) FROM order_orderpackage bi WHERE bi.order_id = order_order.id ) end\n               \n               ,order_order.options->'courier' -- c.name\n               ,coalesce((SELECT cty.name  FROM address_address adres, address_city cty where adres.id=order_order.shipping_address_id and cty.id = adres.city_id ),'') as city  \n    \t\t   ,order_order.options->'shop' as shop\n               ,order_order.source as order_source\n               ,coalesce((SELECT com.name FROM company_company com where com.id = order_order.company_id),'') as company\n               ,coalesce((SELECT sum(ip.quantity) FROM invoice_invoiceproducts ip where ip.invoice_id = invoice_invoice.id),0) as invoice_total_quantity\n                     \n               ,coalesce((SELECT country.name  FROM address_address adres, address_city cty, address_country country where adres.id=order_order.shipping_address_id and cty.id = adres.city_id and cty.country_id = country.id),'') as country\n               ,order_order.options->'has_selling_return_invoice'\n               ,order_order.created_at\n               ,invoice_invoice.ettn\n               \n\n    \n            FROM invoice_invoice INNER JOIN order_order ON invoice_invoice.order_id = order_order.id\n            LEFT JOIN company_company company ON company.id = order_order.company_id\n            \n            \n                \n            -- LEFT JOIN cargo_courier c ON c.id = order_order.courier_id\n        where 1=1  and invoice_invoice.date BETWEEN '2025-04-01 00:00:00' AND '2025-04-30 23:59:59' ) as foo  \n \n \n Filters \n \n where 1=1  and invoice_invoice.date BETWEEN '2025-04-01 00:00:00' AND '2025-04-30 23:59:59'",
            "created_by": "ismail.ala",
            "deleted_by": "",
            "page_name": "Fatura Listesi",
            "end_time": "2025/05/03 12:50:58",
            "difference_text": "0:00:01",
            "cancelled_at": "",
            "is_deleted_from_storage": false,
            "unique_code": "ecdcaf73-f798-4f64-9887-291d53c9f051",
            "slug": "N\u0130SAN-HAMURLABS",
            "deleted_at": "",
            "id": "159"
        },
        {
            "statu": "Ba\u015far\u0131l\u0131",
            "is_error": false,
            "start_time": "2025/05/03 11:52:49",
            "cancelled_by": "",
            "url": "https://s3.eu-west-1.amazonaws.com/cdn-tekbas/report_excel/89ec6d56-29c1-4f77-9c18-f1a1bca805c3/N\u0130SAN1_2025-05-03_11-52-50.xls",
            "created_at": "03/05/2025 11:52:49",
            "data_query": "select * from ( \n            SELECT\n                invoice_invoice.id as invoice_id,\n                invoice_invoice.serial_no,\n                invoice_invoice.no,\n                invoice_invoice.is_sent invoice_is_sent,\n                invoice_invoice.options->'customer_supplier', -- (case when invoice_invoice.supplier_id is not Null then (select name from supplier_supplier where id = invoice_invoice.supplier_id) else (SELECT -- -- name FROM customer_customer WHERE id = invoice_invoice.customer_id) end) as supplier_customer,\n                invoice_invoice.date,\n                invoice_invoice.time,\n                invoice_invoice.type as invoice_type,\n                invoice_invoice.is_waybill,\n                invoice_invoice.total_price,\n                invoice_invoice.total_discount_without_vat,\n                invoice_invoice.total_discount,\n                invoice_invoice.total_vat,\n                invoice_invoice.total,\n                invoice_invoice.is_cancelled invoice_state,\n                order_order.id as order_id,\n                order_order.tracker_code,\n                order_order.options->'customer_name', --(SELECT name FROM customer_customer WHERE id = invoice_invoice.customer_id),\n                order_order.is_cargo_sent,\n                order_order.is_closed,\n                order_order.is_cancelled as o_is_cancelled,\n                order_order.type as order_type,\n                invoice_invoice.options->'full_returned' as full_returned, -- CASE WHEN (SELECT COUNT(*) FROM invoice_invoice WHERE invoice_invoice.order_id = order_order.id AND is_full_return) > 0 THEN true ELSE false END as full_returned,\n                invoice_invoice.total_quantity as adet, --(select SUM(ip.quantity) from invoice_invoiceproducts ip where ip.invoice_id = invoice_invoice.id) adet,\n                -- (select array_to_string(array_agg(i.serial_no||i.no),',')\n                --     from invoice_invoice as i, invoice_invoice_reference_invoices as ri\n                --     where ri.from_invoice_id=invoice_invoice.id\n                --     and i.id=ri.to_invoice_id) as reference_invoice,\n                invoice_invoice.options->'reference_invoices' as reference_invoice,\n                order_order.created_at as order_date,\n                invoice_invoice.options->'reference_invoice_date' as referans_fatura_tarih, \n                -- (select i.date\n                --    from invoice_invoice as i, invoice_invoice_reference_invoices as ri\n                --    where ri.from_invoice_id=invoice_invoice.id\n                --    and i.id=ri.to_invoice_id and i.type = 7 LIMIT 1) as referans_fatura_tarih,\n               invoice_invoice.is_consignment,\n               invoice_invoice.is_approved,\n               order_order.external_tracker_code,\n               order_order.name,\n               order_order.is_sent order_is_sent,\n               invoice_invoice.invoice_numbers,\n               invoice_invoice.options->'currency' as currency, -- (select currency_currency.name from currency_currency Where id=invoice_invoice.currency_id) as currency,\n               case when (SELECT COUNT(bi.id) FROM order_orderpackage bi WHERE bi.order_id = order_order.id ) = 0 then coalesce((order_order.options->'box_count')::bigint,1) else (SELECT COUNT(bi.id) FROM order_orderpackage bi WHERE bi.order_id = order_order.id ) end\n               \n               ,order_order.options->'courier' -- c.name\n               ,coalesce((SELECT cty.name  FROM address_address adres, address_city cty where adres.id=order_order.shipping_address_id and cty.id = adres.city_id ),'') as city  \n    \t\t   ,order_order.options->'shop' as shop\n               ,order_order.source as order_source\n               ,coalesce((SELECT com.name FROM company_company com where com.id = order_order.company_id),'') as company\n               ,coalesce((SELECT sum(ip.quantity) FROM invoice_invoiceproducts ip where ip.invoice_id = invoice_invoice.id),0) as invoice_total_quantity\n                     \n               ,coalesce((SELECT country.name  FROM address_address adres, address_city cty, address_country country where adres.id=order_order.shipping_address_id and cty.id = adres.city_id and cty.country_id = country.id),'') as country\n               ,order_order.options->'has_selling_return_invoice'\n               ,order_order.created_at\n               ,invoice_invoice.ettn\n               \n\n    \n            FROM invoice_invoice INNER JOIN order_order ON invoice_invoice.order_id = order_order.id\n            LEFT JOIN company_company company ON company.id = order_order.company_id\n            \n            \n                \n            -- LEFT JOIN cargo_courier c ON c.id = order_order.courier_id\n        where 1=1  and invoice_invoice.date BETWEEN '2025-04-01 00:00:00' AND '2025-04-30 23:59:59' ) as foo  \n \n \n Filters \n \n where 1=1  and invoice_invoice.date BETWEEN '2025-04-01 00:00:00' AND '2025-04-30 23:59:59'",
            "created_by": "ismail.ala",
            "deleted_by": "",
            "page_name": "Fatura Listesi",
            "end_time": "2025/05/03 11:52:50",
            "difference_text": "0:00:01",
            "cancelled_at": "",
            "is_deleted_from_storage": false,
            "unique_code": "9833c15e-dc63-498d-8082-e82661612f88",
            "slug": "N\u0130SAN1",
            "deleted_at": "",
            "id": "158"
        },
        {
            "statu": "Ba\u015far\u0131l\u0131",
            "is_error": false,
            "start_time": "2025/05/03 11:17:54",
            "cancelled_by": "",
            "url": "https://s3.eu-west-1.amazonaws.com/cdn-tekbas/report_excel/9d454d78-d24f-400d-b653-dffc99a33d09/N\u0130SAN_2025-05-03_11-17-55.xls",
            "created_at": "03/05/2025 11:17:54",
            "data_query": "select * from ( \n            SELECT\n                invoice_invoice.id as invoice_id,\n                invoice_invoice.serial_no,\n                invoice_invoice.no,\n                invoice_invoice.is_sent invoice_is_sent,\n                invoice_invoice.options->'customer_supplier', -- (case when invoice_invoice.supplier_id is not Null then (select name from supplier_supplier where id = invoice_invoice.supplier_id) else (SELECT -- -- name FROM customer_customer WHERE id = invoice_invoice.customer_id) end) as supplier_customer,\n                invoice_invoice.date,\n                invoice_invoice.time,\n                invoice_invoice.type as invoice_type,\n                invoice_invoice.is_waybill,\n                invoice_invoice.total_price,\n                invoice_invoice.total_discount_without_vat,\n                invoice_invoice.total_discount,\n                invoice_invoice.total_vat,\n                invoice_invoice.total,\n                invoice_invoice.is_cancelled invoice_state,\n                order_order.id as order_id,\n                order_order.tracker_code,\n                order_order.options->'customer_name', --(SELECT name FROM customer_customer WHERE id = invoice_invoice.customer_id),\n                order_order.is_cargo_sent,\n                order_order.is_closed,\n                order_order.is_cancelled as o_is_cancelled,\n                order_order.type as order_type,\n                invoice_invoice.options->'full_returned' as full_returned, -- CASE WHEN (SELECT COUNT(*) FROM invoice_invoice WHERE invoice_invoice.order_id = order_order.id AND is_full_return) > 0 THEN true ELSE false END as full_returned,\n                invoice_invoice.total_quantity as adet, --(select SUM(ip.quantity) from invoice_invoiceproducts ip where ip.invoice_id = invoice_invoice.id) adet,\n                -- (select array_to_string(array_agg(i.serial_no||i.no),',')\n                --     from invoice_invoice as i, invoice_invoice_reference_invoices as ri\n                --     where ri.from_invoice_id=invoice_invoice.id\n                --     and i.id=ri.to_invoice_id) as reference_invoice,\n                invoice_invoice.options->'reference_invoices' as reference_invoice,\n                order_order.created_at as order_date,\n                invoice_invoice.options->'reference_invoice_date' as referans_fatura_tarih, \n                -- (select i.date\n                --    from invoice_invoice as i, invoice_invoice_reference_invoices as ri\n                --    where ri.from_invoice_id=invoice_invoice.id\n                --    and i.id=ri.to_invoice_id and i.type = 7 LIMIT 1) as referans_fatura_tarih,\n               invoice_invoice.is_consignment,\n               invoice_invoice.is_approved,\n               order_order.external_tracker_code,\n               order_order.name,\n               order_order.is_sent order_is_sent,\n               invoice_invoice.invoice_numbers,\n               invoice_invoice.options->'currency' as currency, -- (select currency_currency.name from currency_currency Where id=invoice_invoice.currency_id) as currency,\n               case when (SELECT COUNT(bi.id) FROM order_orderpackage bi WHERE bi.order_id = order_order.id ) = 0 then coalesce((order_order.options->'box_count')::bigint,1) else (SELECT COUNT(bi.id) FROM order_orderpackage bi WHERE bi.order_id = order_order.id ) end\n               \n               ,order_order.options->'courier' -- c.name\n               ,coalesce((SELECT cty.name  FROM address_address adres, address_city cty where adres.id=order_order.shipping_address_id and cty.id = adres.city_id ),'') as city  \n    \t\t   ,order_order.options->'shop' as shop\n               ,order_order.source as order_source\n               ,coalesce((SELECT com.name FROM company_company com where com.id = order_order.company_id),'') as company\n               ,coalesce((SELECT sum(ip.quantity) FROM invoice_invoiceproducts ip where ip.invoice_id = invoice_invoice.id),0) as invoice_total_quantity\n                     \n               ,coalesce((SELECT country.name  FROM address_address adres, address_city cty, address_country country where adres.id=order_order.shipping_address_id and cty.id = adres.city_id and cty.country_id = country.id),'') as country\n               ,order_order.options->'has_selling_return_invoice'\n               ,order_order.created_at\n               ,invoice_invoice.ettn\n               \n\n    \n            FROM invoice_invoice INNER JOIN order_order ON invoice_invoice.order_id = order_order.id\n            LEFT JOIN company_company company ON company.id = order_order.company_id\n            \n            \n                \n            -- LEFT JOIN cargo_courier c ON c.id = order_order.courier_id\n        where 1=1  and invoice_invoice.date BETWEEN '2025-04-01 00:00:00' AND '2025-04-30 23:59:59' ) as foo  \n \n \n Filters \n \n where 1=1  and invoice_invoice.date BETWEEN '2025-04-01 00:00:00' AND '2025-04-30 23:59:59'",
            "created_by": "ismail.ala",
            "deleted_by": "",
            "page_name": "Fatura Listesi",
            "end_time": "2025/05/03 11:17:55",
            "difference_text": "0:00:01",
            "cancelled_at": "",
            "is_deleted_from_storage": false,
            "unique_code": "53038393-ee6f-490f-aee6-f487f8b0ff74",
            "slug": "N\u0130SAN",
            "deleted_at": "",
            "id": "157"
        },
        {
            "statu": "Ba\u015far\u0131l\u0131",
            "is_error": false,
            "start_time": "2025/04/12 10:39:26",
            "cancelled_by": "",
            "url": "https://s3.eu-west-1.amazonaws.com/cdn-tekbas/report_excel/0373c015-e944-4fb0-9179-0027d05bf00f/HAMURLABS_2025-04-12_10-39-27.xls",
            "created_at": "12/04/2025 10:39:26",
            "data_query": "select * from ( \n            SELECT\n                invoice_invoice.id as invoice_id,\n                invoice_invoice.serial_no,\n                invoice_invoice.no,\n                invoice_invoice.is_sent invoice_is_sent,\n                invoice_invoice.options->'customer_supplier', -- (case when invoice_invoice.supplier_id is not Null then (select name from supplier_supplier where id = invoice_invoice.supplier_id) else (SELECT -- -- name FROM customer_customer WHERE id = invoice_invoice.customer_id) end) as supplier_customer,\n                invoice_invoice.date,\n                invoice_invoice.time,\n                invoice_invoice.type as invoice_type,\n                invoice_invoice.is_waybill,\n                invoice_invoice.total_price,\n                invoice_invoice.total_discount_without_vat,\n                invoice_invoice.total_discount,\n                invoice_invoice.total_vat,\n                invoice_invoice.total,\n                invoice_invoice.is_cancelled invoice_state,\n                order_order.id as order_id,\n                order_order.tracker_code,\n                order_order.options->'customer_name', --(SELECT name FROM customer_customer WHERE id = invoice_invoice.customer_id),\n                order_order.is_cargo_sent,\n                order_order.is_closed,\n                order_order.is_cancelled as o_is_cancelled,\n                order_order.type as order_type,\n                invoice_invoice.options->'full_returned' as full_returned, -- CASE WHEN (SELECT COUNT(*) FROM invoice_invoice WHERE invoice_invoice.order_id = order_order.id AND is_full_return) > 0 THEN true ELSE false END as full_returned,\n                invoice_invoice.total_quantity as adet, --(select SUM(ip.quantity) from invoice_invoiceproducts ip where ip.invoice_id = invoice_invoice.id) adet,\n                -- (select array_to_string(array_agg(i.serial_no||i.no),',')\n                --     from invoice_invoice as i, invoice_invoice_reference_invoices as ri\n                --     where ri.from_invoice_id=invoice_invoice.id\n                --     and i.id=ri.to_invoice_id) as reference_invoice,\n                invoice_invoice.options->'reference_invoices' as reference_invoice,\n                order_order.created_at as order_date,\n                invoice_invoice.options->'reference_invoice_date' as referans_fatura_tarih, \n                -- (select i.date\n                --    from invoice_invoice as i, invoice_invoice_reference_invoices as ri\n                --    where ri.from_invoice_id=invoice_invoice.id\n                --    and i.id=ri.to_invoice_id and i.type = 7 LIMIT 1) as referans_fatura_tarih,\n               invoice_invoice.is_consignment,\n               invoice_invoice.is_approved,\n               order_order.external_tracker_code,\n               order_order.name,\n               order_order.is_sent order_is_sent,\n               invoice_invoice.invoice_numbers,\n               invoice_invoice.options->'currency' as currency, -- (select currency_currency.name from currency_currency Where id=invoice_invoice.currency_id) as currency,\n               case when (SELECT COUNT(bi.id) FROM order_orderpackage bi WHERE bi.order_id = order_order.id ) = 0 then coalesce((order_order.options->'box_count')::bigint,1) else (SELECT COUNT(bi.id) FROM order_orderpackage bi WHERE bi.order_id = order_order.id ) end\n               \n               ,order_order.options->'courier' -- c.name\n               ,coalesce((SELECT cty.name  FROM address_address adres, address_city cty where adres.id=order_order.shipping_address_id and cty.id = adres.city_id ),'') as city  \n    \t\t   ,order_order.options->'shop' as shop\n               ,order_order.source as order_source\n               ,coalesce((SELECT com.name FROM company_company com where com.id = order_order.company_id),'') as company\n               ,coalesce((SELECT sum(ip.quantity) FROM invoice_invoiceproducts ip where ip.invoice_id = invoice_invoice.id),0) as invoice_total_quantity\n                     \n               ,coalesce((SELECT country.name  FROM address_address adres, address_city cty, address_country country where adres.id=order_order.shipping_address_id and cty.id = adres.city_id and cty.country_id = country.id),'') as country\n               ,order_order.options->'has_selling_return_invoice'\n               ,order_order.created_at\n               ,invoice_invoice.ettn\n               \n\n    \n            FROM invoice_invoice INNER JOIN order_order ON invoice_invoice.order_id = order_order.id\n            LEFT JOIN company_company company ON company.id = order_order.company_id\n            \n            \n                \n            -- LEFT JOIN cargo_courier c ON c.id = order_order.courier_id\n        where 1=1  and invoice_invoice.date BETWEEN '2025-03-01 00:00:00' AND '2025-03-31 23:59:59' ) as foo  \n \n \n Filters \n \n where 1=1  and invoice_invoice.date BETWEEN '2025-03-01 00:00:00' AND '2025-03-31 23:59:59'",
            "created_by": "ismail.ala",
            "deleted_by": "",
            "page_name": "Fatura Listesi",
            "end_time": "2025/04/12 10:39:27",
            "difference_text": "0:00:01",
            "cancelled_at": "",
            "is_deleted_from_storage": false,
            "unique_code": "878c3d3a-7c2c-4707-9e06-980a4e38fd9e",
            "slug": "HAMURLABS",
            "deleted_at": "",
            "id": "156"
        },
        {
            "statu": "Ba\u015far\u0131l\u0131",
            "is_error": false,
            "start_time": "2025/04/07 12:55:04",
            "cancelled_by": "",
            "url": "https://s3.eu-west-1.amazonaws.com/cdn-tekbas/report_excel/e9cf7314-86f4-4a51-811d-fc230271f68c/01_2025-04-07_12-55-05.xls",
            "created_at": "07/04/2025 12:55:04",
            "data_query": "select * from ( \n            SELECT\n                invoice_invoice.id as invoice_id,\n                invoice_invoice.serial_no,\n                invoice_invoice.no,\n                invoice_invoice.is_sent invoice_is_sent,\n                invoice_invoice.options->'customer_supplier', -- (case when invoice_invoice.supplier_id is not Null then (select name from supplier_supplier where id = invoice_invoice.supplier_id) else (SELECT -- -- name FROM customer_customer WHERE id = invoice_invoice.customer_id) end) as supplier_customer,\n                invoice_invoice.date,\n                invoice_invoice.time,\n                invoice_invoice.type as invoice_type,\n                invoice_invoice.is_waybill,\n                invoice_invoice.total_price,\n                invoice_invoice.total_discount_without_vat,\n                invoice_invoice.total_discount,\n                invoice_invoice.total_vat,\n                invoice_invoice.total,\n                invoice_invoice.is_cancelled invoice_state,\n                order_order.id as order_id,\n                order_order.tracker_code,\n                order_order.options->'customer_name', --(SELECT name FROM customer_customer WHERE id = invoice_invoice.customer_id),\n                order_order.is_cargo_sent,\n                order_order.is_closed,\n                order_order.is_cancelled as o_is_cancelled,\n                order_order.type as order_type,\n                invoice_invoice.options->'full_returned' as full_returned, -- CASE WHEN (SELECT COUNT(*) FROM invoice_invoice WHERE invoice_invoice.order_id = order_order.id AND is_full_return) > 0 THEN true ELSE false END as full_returned,\n                invoice_invoice.total_quantity as adet, --(select SUM(ip.quantity) from invoice_invoiceproducts ip where ip.invoice_id = invoice_invoice.id) adet,\n                -- (select array_to_string(array_agg(i.serial_no||i.no),',')\n                --     from invoice_invoice as i, invoice_invoice_reference_invoices as ri\n                --     where ri.from_invoice_id=invoice_invoice.id\n                --     and i.id=ri.to_invoice_id) as reference_invoice,\n                invoice_invoice.options->'reference_invoices' as reference_invoice,\n                order_order.created_at as order_date,\n                invoice_invoice.options->'reference_invoice_date' as referans_fatura_tarih, \n                -- (select i.date\n                --    from invoice_invoice as i, invoice_invoice_reference_invoices as ri\n                --    where ri.from_invoice_id=invoice_invoice.id\n                --    and i.id=ri.to_invoice_id and i.type = 7 LIMIT 1) as referans_fatura_tarih,\n               invoice_invoice.is_consignment,\n               invoice_invoice.is_approved,\n               order_order.external_tracker_code,\n               order_order.name,\n               order_order.is_sent order_is_sent,\n               invoice_invoice.invoice_numbers,\n               invoice_invoice.options->'currency' as currency, -- (select currency_currency.name from currency_currency Where id=invoice_invoice.currency_id) as currency,\n               case when (SELECT COUNT(bi.id) FROM order_orderpackage bi WHERE bi.order_id = order_order.id ) = 0 then coalesce((order_order.options->'box_count')::bigint,1) else (SELECT COUNT(bi.id) FROM order_orderpackage bi WHERE bi.order_id = order_order.id ) end\n               \n               ,order_order.options->'courier' -- c.name\n               ,coalesce((SELECT cty.name  FROM address_address adres, address_city cty where adres.id=order_order.shipping_address_id and cty.id = adres.city_id ),'') as city  \n    \t\t   ,order_order.options->'shop' as shop\n               ,order_order.source as order_source\n               ,coalesce((SELECT com.name FROM company_company com where com.id = order_order.company_id),'') as company\n               ,coalesce((SELECT sum(ip.quantity) FROM invoice_invoiceproducts ip where ip.invoice_id = invoice_invoice.id),0) as invoice_total_quantity\n                     \n               ,coalesce((SELECT country.name  FROM address_address adres, address_city cty, address_country country where adres.id=order_order.shipping_address_id and cty.id = adres.city_id and cty.country_id = country.id),'') as country\n               ,order_order.options->'has_selling_return_invoice'\n               ,order_order.created_at\n               ,invoice_invoice.ettn\n               \n\n    \n            FROM invoice_invoice INNER JOIN order_order ON invoice_invoice.order_id = order_order.id\n            LEFT JOIN company_company company ON company.id = order_order.company_id\n            \n            \n                \n            -- LEFT JOIN cargo_courier c ON c.id = order_order.courier_id\n        where 1=1  and invoice_invoice.date BETWEEN '2025-03-01 00:00:00' AND '2025-03-31 23:59:59' ) as foo  \n \n \n Filters \n \n where 1=1  and invoice_invoice.date BETWEEN '2025-03-01 00:00:00' AND '2025-03-31 23:59:59'",
            "created_by": "ismail.ala",
            "deleted_by": "",
            "page_name": "Fatura Listesi",
            "end_time": "2025/04/07 12:55:05",
            "difference_text": "0:00:01",
            "cancelled_at": "",
            "is_deleted_from_storage": false,
            "unique_code": "8394ed36-d414-481b-8117-7efeda40f939",
            "slug": "01",
            "deleted_at": "",
            "id": "155"
        },
        {
            "statu": "Ba\u015far\u0131l\u0131",
            "is_error": false,
            "start_time": "2025/04/07 11:41:41",
            "cancelled_by": "",
            "url": "https://s3.eu-west-1.amazonaws.com/cdn-tekbas/report_excel/a21843f2-770a-4dc1-b3d0-29127dd28c6c/111_2025-04-07_11-41-42.xls",
            "created_at": "07/04/2025 11:41:41",
            "data_query": "select * from ( \n            SELECT\n                invoice_invoice.id as invoice_id,\n                invoice_invoice.serial_no,\n                invoice_invoice.no,\n                invoice_invoice.is_sent invoice_is_sent,\n                invoice_invoice.options->'customer_supplier', -- (case when invoice_invoice.supplier_id is not Null then (select name from supplier_supplier where id = invoice_invoice.supplier_id) else (SELECT -- -- name FROM customer_customer WHERE id = invoice_invoice.customer_id) end) as supplier_customer,\n                invoice_invoice.date,\n                invoice_invoice.time,\n                invoice_invoice.type as invoice_type,\n                invoice_invoice.is_waybill,\n                invoice_invoice.total_price,\n                invoice_invoice.total_discount_without_vat,\n                invoice_invoice.total_discount,\n                invoice_invoice.total_vat,\n                invoice_invoice.total,\n                invoice_invoice.is_cancelled invoice_state,\n                order_order.id as order_id,\n                order_order.tracker_code,\n                order_order.options->'customer_name', --(SELECT name FROM customer_customer WHERE id = invoice_invoice.customer_id),\n                order_order.is_cargo_sent,\n                order_order.is_closed,\n                order_order.is_cancelled as o_is_cancelled,\n                order_order.type as order_type,\n                invoice_invoice.options->'full_returned' as full_returned, -- CASE WHEN (SELECT COUNT(*) FROM invoice_invoice WHERE invoice_invoice.order_id = order_order.id AND is_full_return) > 0 THEN true ELSE false END as full_returned,\n                invoice_invoice.total_quantity as adet, --(select SUM(ip.quantity) from invoice_invoiceproducts ip where ip.invoice_id = invoice_invoice.id) adet,\n                -- (select array_to_string(array_agg(i.serial_no||i.no),',')\n                --     from invoice_invoice as i, invoice_invoice_reference_invoices as ri\n                --     where ri.from_invoice_id=invoice_invoice.id\n                --     and i.id=ri.to_invoice_id) as reference_invoice,\n                invoice_invoice.options->'reference_invoices' as reference_invoice,\n                order_order.created_at as order_date,\n                invoice_invoice.options->'reference_invoice_date' as referans_fatura_tarih, \n                -- (select i.date\n                --    from invoice_invoice as i, invoice_invoice_reference_invoices as ri\n                --    where ri.from_invoice_id=invoice_invoice.id\n                --    and i.id=ri.to_invoice_id and i.type = 7 LIMIT 1) as referans_fatura_tarih,\n               invoice_invoice.is_consignment,\n               invoice_invoice.is_approved,\n               order_order.external_tracker_code,\n               order_order.name,\n               order_order.is_sent order_is_sent,\n               invoice_invoice.invoice_numbers,\n               invoice_invoice.options->'currency' as currency, -- (select currency_currency.name from currency_currency Where id=invoice_invoice.currency_id) as currency,\n               case when (SELECT COUNT(bi.id) FROM order_orderpackage bi WHERE bi.order_id = order_order.id ) = 0 then coalesce((order_order.options->'box_count')::bigint,1) else (SELECT COUNT(bi.id) FROM order_orderpackage bi WHERE bi.order_id = order_order.id ) end\n               \n               ,order_order.options->'courier' -- c.name\n               ,coalesce((SELECT cty.name  FROM address_address adres, address_city cty where adres.id=order_order.shipping_address_id and cty.id = adres.city_id ),'') as city  \n    \t\t   ,order_order.options->'shop' as shop\n               ,order_order.source as order_source\n               ,coalesce((SELECT com.name FROM company_company com where com.id = order_order.company_id),'') as company\n               ,coalesce((SELECT sum(ip.quantity) FROM invoice_invoiceproducts ip where ip.invoice_id = invoice_invoice.id),0) as invoice_total_quantity\n                     \n               ,coalesce((SELECT country.name  FROM address_address adres, address_city cty, address_country country where adres.id=order_order.shipping_address_id and cty.id = adres.city_id and cty.country_id = country.id),'') as country\n               ,order_order.options->'has_selling_return_invoice'\n               ,order_order.created_at\n               ,invoice_invoice.ettn\n               \n\n    \n            FROM invoice_invoice INNER JOIN order_order ON invoice_invoice.order_id = order_order.id\n            LEFT JOIN company_company company ON company.id = order_order.company_id\n            \n            \n                \n            -- LEFT JOIN cargo_courier c ON c.id = order_order.courier_id\n        where 1=1  and invoice_invoice.date BETWEEN '2025-03-01 00:00:00' AND '2025-03-31 23:59:59' ) as foo  \n \n \n Filters \n \n where 1=1  and invoice_invoice.date BETWEEN '2025-03-01 00:00:00' AND '2025-03-31 23:59:59'",
            "created_by": "ismail.ala",
            "deleted_by": "",
            "page_name": "Fatura Listesi",
            "end_time": "2025/04/07 11:41:42",
            "difference_text": "0:00:01",
            "cancelled_at": "",
            "is_deleted_from_storage": false,
            "unique_code": "956d222c-bd8d-45d2-99aa-53b65ff9aecb",
            "slug": "111",
            "deleted_at": "",
            "id": "154"
        },
        {
            "statu": "Ba\u015far\u0131l\u0131",
            "is_error": false,
            "start_time": "2025/04/02 15:34:18",
            "cancelled_by": "",
            "url": "https://s3.eu-west-1.amazonaws.com/cdn-tekbas/report_excel/7d6cace1-fa97-4ec7-a002-a15d8008a552/MART SATI\u015e_2025-04-02_15-34-19.xls",
            "created_at": "02/04/2025 15:34:18",
            "data_query": "select * from ( \n            SELECT\n                invoice_invoice.id as invoice_id,\n                invoice_invoice.serial_no,\n                invoice_invoice.no,\n                invoice_invoice.is_sent invoice_is_sent,\n                invoice_invoice.options->'customer_supplier', -- (case when invoice_invoice.supplier_id is not Null then (select name from supplier_supplier where id = invoice_invoice.supplier_id) else (SELECT -- -- name FROM customer_customer WHERE id = invoice_invoice.customer_id) end) as supplier_customer,\n                invoice_invoice.date,\n                invoice_invoice.time,\n                invoice_invoice.type as invoice_type,\n                invoice_invoice.is_waybill,\n                invoice_invoice.total_price,\n                invoice_invoice.total_discount_without_vat,\n                invoice_invoice.total_discount,\n                invoice_invoice.total_vat,\n                invoice_invoice.total,\n                invoice_invoice.is_cancelled invoice_state,\n                order_order.id as order_id,\n                order_order.tracker_code,\n                order_order.options->'customer_name', --(SELECT name FROM customer_customer WHERE id = invoice_invoice.customer_id),\n                order_order.is_cargo_sent,\n                order_order.is_closed,\n                order_order.is_cancelled as o_is_cancelled,\n                order_order.type as order_type,\n                invoice_invoice.options->'full_returned' as full_returned, -- CASE WHEN (SELECT COUNT(*) FROM invoice_invoice WHERE invoice_invoice.order_id = order_order.id AND is_full_return) > 0 THEN true ELSE false END as full_returned,\n                invoice_invoice.total_quantity as adet, --(select SUM(ip.quantity) from invoice_invoiceproducts ip where ip.invoice_id = invoice_invoice.id) adet,\n                -- (select array_to_string(array_agg(i.serial_no||i.no),',')\n                --     from invoice_invoice as i, invoice_invoice_reference_invoices as ri\n                --     where ri.from_invoice_id=invoice_invoice.id\n                --     and i.id=ri.to_invoice_id) as reference_invoice,\n                invoice_invoice.options->'reference_invoices' as reference_invoice,\n                order_order.created_at as order_date,\n                invoice_invoice.options->'reference_invoice_date' as referans_fatura_tarih, \n                -- (select i.date\n                --    from invoice_invoice as i, invoice_invoice_reference_invoices as ri\n                --    where ri.from_invoice_id=invoice_invoice.id\n                --    and i.id=ri.to_invoice_id and i.type = 7 LIMIT 1) as referans_fatura_tarih,\n               invoice_invoice.is_consignment,\n               invoice_invoice.is_approved,\n               order_order.external_tracker_code,\n               order_order.name,\n               order_order.is_sent order_is_sent,\n               invoice_invoice.invoice_numbers,\n               invoice_invoice.options->'currency' as currency, -- (select currency_currency.name from currency_currency Where id=invoice_invoice.currency_id) as currency,\n               case when (SELECT COUNT(bi.id) FROM order_orderpackage bi WHERE bi.order_id = order_order.id ) = 0 then coalesce((order_order.options->'box_count')::bigint,1) else (SELECT COUNT(bi.id) FROM order_orderpackage bi WHERE bi.order_id = order_order.id ) end\n               \n        ,bi.code  \n        ,bi.barcode \n        ,ip.quantity \n        ,ip.unit   \n        ,ip.price \n        ,ip.discount  \n        ,ip.vat  \n        ,ip.total\n        ,bi.options->'shop_commission'\n        ,round(((bi.selling_price * bi.quantity) * coalesce((bi.options->'shop_commission')::numeric, 0) / 100)::numeric, 1) commission_amount\n        ,bi.description as description\n        ,bi.name\n    \n               ,order_order.options->'courier' -- c.name\n               ,coalesce((SELECT cty.name  FROM address_address adres, address_city cty where adres.id=order_order.shipping_address_id and cty.id = adres.city_id ),'') as city  \n    \t\t   ,order_order.options->'shop' as shop\n               ,order_order.source as order_source\n               ,coalesce((SELECT com.name FROM company_company com where com.id = order_order.company_id),'') as company\n               ,coalesce((SELECT sum(ip.quantity) FROM invoice_invoiceproducts ip where ip.invoice_id = invoice_invoice.id),0) as invoice_total_quantity\n               \n      ,(select  array_to_string(array_agg(iap.external_id), ', ')\n        from integration_integrationproduct as iap, mainproduct_productmeta iap_pm \n        WHERE iap_pm.id = ip.product_meta_id and  iap_pm.id = iap.meta_id) as integration_product_code\n        ,bi.option_value as size\n        ,bi.options -> 'ana renk' as main_color\n        ,ip.unit as unit\n        ,coalesce((SELECT cg.name\n           FROM mainproduct_categorygroup cg, mainproduct_productmeta pm, mainproduct_product p, mainproduct_mainproduct mp\n           where bi.product_meta_id = pm.id\n           and pm.product_id = p.id\n           and p.mainproduct_id = mp.id\n           and mp.category_group_id = cg.id),'') as category_group\n        ,bi.external_id\n          \n               ,coalesce((SELECT country.name  FROM address_address adres, address_city cty, address_country country where adres.id=order_order.shipping_address_id and cty.id = adres.city_id and cty.country_id = country.id),'') as country\n               ,order_order.options->'has_selling_return_invoice'\n               ,order_order.created_at\n               ,invoice_invoice.ettn\n               ,bi.options->'original_vat' as original_vat\n\n    \n            FROM invoice_invoice INNER JOIN order_order ON invoice_invoice.order_id = order_order.id\n            LEFT JOIN company_company company ON company.id = order_order.company_id\n            \n            \n                \n        JOIN invoice_invoiceproducts ip ON invoice_invoice.id = ip.invoice_id\n        JOIN order_basketitem bi ON ip.basket_item_id = bi.id\n        -- left join shop_shopproducts sp on sp.meta_id = bi.product_meta_id and sp.shop_id = order_order.shop_id\n    \n            -- LEFT JOIN cargo_courier c ON c.id = order_order.courier_id\n        where 1=1  and invoice_invoice.date BETWEEN '2025-03-01 00:00:00' AND '2025-03-31 23:59:59' ) as foo  \n \n \n Filters \n \n where 1=1  and invoice_invoice.date BETWEEN '2025-03-01 00:00:00' AND '2025-03-31 23:59:59'",
            "created_by": "ismail.ala",
            "deleted_by": "",
            "page_name": "Fatura \u00dcr\u00fcnleri Listesi",
            "end_time": "2025/04/02 15:34:19",
            "difference_text": "0:00:01",
            "cancelled_at": "",
            "is_deleted_from_storage": false,
            "unique_code": "25de0d28-2c7c-46a1-b647-419e88e597ff",
            "slug": "MART SATI\u015e",
            "deleted_at": "",
            "id": "153"
        },
        {
            "statu": "Ba\u015far\u0131l\u0131",
            "is_error": false,
            "start_time": "2025/03/10 16:20:25",
            "cancelled_by": "",
            "url": "https://s3.eu-west-1.amazonaws.com/cdn-tekbas/report_excel/09b99940-44a3-4990-bbd3-6bf5a688a6b1/invoice_list_2025-03-10_16-20-27.xls",
            "created_at": "10/03/2025 16:20:25",
            "data_query": "select * from ( \n            SELECT\n                invoice_invoice.id as invoice_id,\n                invoice_invoice.serial_no,\n                invoice_invoice.no,\n                invoice_invoice.is_sent invoice_is_sent,\n                invoice_invoice.options->'customer_supplier', -- (case when invoice_invoice.supplier_id is not Null then (select name from supplier_supplier where id = invoice_invoice.supplier_id) else (SELECT -- -- name FROM customer_customer WHERE id = invoice_invoice.customer_id) end) as supplier_customer,\n                invoice_invoice.date,\n                invoice_invoice.time,\n                invoice_invoice.type as invoice_type,\n                invoice_invoice.is_waybill,\n                invoice_invoice.total_price,\n                invoice_invoice.total_discount_without_vat,\n                invoice_invoice.total_discount,\n                invoice_invoice.total_vat,\n                invoice_invoice.total,\n                invoice_invoice.is_cancelled invoice_state,\n                order_order.id as order_id,\n                order_order.tracker_code,\n                order_order.options->'customer_name', --(SELECT name FROM customer_customer WHERE id = invoice_invoice.customer_id),\n                order_order.is_cargo_sent,\n                order_order.is_closed,\n                order_order.is_cancelled as o_is_cancelled,\n                order_order.type as order_type,\n                invoice_invoice.options->'full_returned' as full_returned, -- CASE WHEN (SELECT COUNT(*) FROM invoice_invoice WHERE invoice_invoice.order_id = order_order.id AND is_full_return) > 0 THEN true ELSE false END as full_returned,\n                invoice_invoice.total_quantity as adet, --(select SUM(ip.quantity) from invoice_invoiceproducts ip where ip.invoice_id = invoice_invoice.id) adet,\n                -- (select array_to_string(array_agg(i.serial_no||i.no),',')\n                --     from invoice_invoice as i, invoice_invoice_reference_invoices as ri\n                --     where ri.from_invoice_id=invoice_invoice.id\n                --     and i.id=ri.to_invoice_id) as reference_invoice,\n                invoice_invoice.options->'reference_invoices' as reference_invoice,\n                order_order.created_at as order_date,\n                invoice_invoice.options->'reference_invoice_date' as referans_fatura_tarih, \n                -- (select i.date\n                --    from invoice_invoice as i, invoice_invoice_reference_invoices as ri\n                --    where ri.from_invoice_id=invoice_invoice.id\n                --    and i.id=ri.to_invoice_id and i.type = 7 LIMIT 1) as referans_fatura_tarih,\n               invoice_invoice.is_consignment,\n               invoice_invoice.is_approved,\n               order_order.external_tracker_code,\n               order_order.name,\n               order_order.is_sent order_is_sent,\n               invoice_invoice.invoice_numbers,\n               invoice_invoice.options->'currency' as currency, -- (select currency_currency.name from currency_currency Where id=invoice_invoice.currency_id) as currency,\n               case when (SELECT COUNT(bi.id) FROM order_orderpackage bi WHERE bi.order_id = order_order.id ) = 0 then coalesce((order_order.options->'box_count')::bigint,1) else (SELECT COUNT(bi.id) FROM order_orderpackage bi WHERE bi.order_id = order_order.id ) end\n               \n        ,bi.code  \n        ,bi.barcode \n        ,ip.quantity \n        ,ip.unit   \n        ,ip.price \n        ,ip.discount  \n        ,ip.vat  \n        ,ip.total\n        ,bi.options->'shop_commission'\n        ,round(((bi.selling_price * bi.quantity) * coalesce((bi.options->'shop_commission')::numeric, 0) / 100)::numeric, 1) commission_amount\n        ,bi.description as description\n        ,bi.name\n    \n               ,order_order.options->'courier' -- c.name\n               ,coalesce((SELECT cty.name  FROM address_address adres, address_city cty where adres.id=order_order.shipping_address_id and cty.id = adres.city_id ),'') as city  \n    \t\t   ,order_order.options->'shop' as shop\n               ,order_order.source as order_source\n               ,coalesce((SELECT com.name FROM company_company com where com.id = order_order.company_id),'') as company\n               ,coalesce((SELECT sum(ip.quantity) FROM invoice_invoiceproducts ip where ip.invoice_id = invoice_invoice.id),0) as invoice_total_quantity\n               \n      ,(select  array_to_string(array_agg(iap.external_id), ', ')\n        from integration_integrationproduct as iap, mainproduct_productmeta iap_pm \n        WHERE iap_pm.id = ip.product_meta_id and  iap_pm.id = iap.meta_id) as integration_product_code\n        ,bi.option_value as size\n        ,bi.options -> 'ana renk' as main_color\n        ,ip.unit as unit\n        ,coalesce((SELECT cg.name\n           FROM mainproduct_categorygroup cg, mainproduct_productmeta pm, mainproduct_product p, mainproduct_mainproduct mp\n           where bi.product_meta_id = pm.id\n           and pm.product_id = p.id\n           and p.mainproduct_id = mp.id\n           and mp.category_group_id = cg.id),'') as category_group\n        ,bi.external_id\n          \n               ,coalesce((SELECT country.name  FROM address_address adres, address_city cty, address_country country where adres.id=order_order.shipping_address_id and cty.id = adres.city_id and cty.country_id = country.id),'') as country\n               ,order_order.options->'has_selling_return_invoice'\n               ,order_order.created_at\n               ,invoice_invoice.ettn\n               ,bi.options->'original_vat' as original_vat\n\n    \n            FROM invoice_invoice INNER JOIN order_order ON invoice_invoice.order_id = order_order.id\n            LEFT JOIN company_company company ON company.id = order_order.company_id\n            \n            \n                \n        JOIN invoice_invoiceproducts ip ON invoice_invoice.id = ip.invoice_id\n        JOIN order_basketitem bi ON ip.basket_item_id = bi.id\n        -- left join shop_shopproducts sp on sp.meta_id = bi.product_meta_id and sp.shop_id = order_order.shop_id\n    \n            -- LEFT JOIN cargo_courier c ON c.id = order_order.courier_id\n        where 1=1  and invoice_invoice.date BETWEEN '2025-02-01 00:00:00' AND '2025-02-28 23:59:59' ) as foo  \n \n \n Filters \n \n where 1=1  and invoice_invoice.date BETWEEN '2025-02-01 00:00:00' AND '2025-02-28 23:59:59'",
            "created_by": "ismail.ala",
            "deleted_by": "",
            "page_name": "Fatura \u00dcr\u00fcnleri Listesi",
            "end_time": "2025/03/10 16:20:27",
            "difference_text": "0:00:02",
            "cancelled_at": "",
            "is_deleted_from_storage": false,
            "unique_code": "60ff62bd-ccfa-4d4d-a6ce-fd97fd2a1371",
            "slug": "",
            "deleted_at": "",
            "id": "152"
        },
        {
            "statu": "Ba\u015far\u0131l\u0131",
            "is_error": false,
            "start_time": "2025/03/10 16:14:18",
            "cancelled_by": "",
            "url": "https://s3.eu-west-1.amazonaws.com/cdn-tekbas/report_excel/714242d7-4b0b-4294-8dc8-8993d3330dc0/invoice_list_2025-03-10_16-14-20.xls",
            "created_at": "10/03/2025 16:14:18",
            "data_query": "select * from ( \n            SELECT\n                invoice_invoice.id as invoice_id,\n                invoice_invoice.serial_no,\n                invoice_invoice.no,\n                invoice_invoice.is_sent invoice_is_sent,\n                invoice_invoice.options->'customer_supplier', -- (case when invoice_invoice.supplier_id is not Null then (select name from supplier_supplier where id = invoice_invoice.supplier_id) else (SELECT -- -- name FROM customer_customer WHERE id = invoice_invoice.customer_id) end) as supplier_customer,\n                invoice_invoice.date,\n                invoice_invoice.time,\n                invoice_invoice.type as invoice_type,\n                invoice_invoice.is_waybill,\n                invoice_invoice.total_price,\n                invoice_invoice.total_discount_without_vat,\n                invoice_invoice.total_discount,\n                invoice_invoice.total_vat,\n                invoice_invoice.total,\n                invoice_invoice.is_cancelled invoice_state,\n                order_order.id as order_id,\n                order_order.tracker_code,\n                order_order.options->'customer_name', --(SELECT name FROM customer_customer WHERE id = invoice_invoice.customer_id),\n                order_order.is_cargo_sent,\n                order_order.is_closed,\n                order_order.is_cancelled as o_is_cancelled,\n                order_order.type as order_type,\n                invoice_invoice.options->'full_returned' as full_returned, -- CASE WHEN (SELECT COUNT(*) FROM invoice_invoice WHERE invoice_invoice.order_id = order_order.id AND is_full_return) > 0 THEN true ELSE false END as full_returned,\n                invoice_invoice.total_quantity as adet, --(select SUM(ip.quantity) from invoice_invoiceproducts ip where ip.invoice_id = invoice_invoice.id) adet,\n                -- (select array_to_string(array_agg(i.serial_no||i.no),',')\n                --     from invoice_invoice as i, invoice_invoice_reference_invoices as ri\n                --     where ri.from_invoice_id=invoice_invoice.id\n                --     and i.id=ri.to_invoice_id) as reference_invoice,\n                invoice_invoice.options->'reference_invoices' as reference_invoice,\n                order_order.created_at as order_date,\n                invoice_invoice.options->'reference_invoice_date' as referans_fatura_tarih, \n                -- (select i.date\n                --    from invoice_invoice as i, invoice_invoice_reference_invoices as ri\n                --    where ri.from_invoice_id=invoice_invoice.id\n                --    and i.id=ri.to_invoice_id and i.type = 7 LIMIT 1) as referans_fatura_tarih,\n               invoice_invoice.is_consignment,\n               invoice_invoice.is_approved,\n               order_order.external_tracker_code,\n               order_order.name,\n               order_order.is_sent order_is_sent,\n               invoice_invoice.invoice_numbers,\n               invoice_invoice.options->'currency' as currency, -- (select currency_currency.name from currency_currency Where id=invoice_invoice.currency_id) as currency,\n               case when (SELECT COUNT(bi.id) FROM order_orderpackage bi WHERE bi.order_id = order_order.id ) = 0 then coalesce((order_order.options->'box_count')::bigint,1) else (SELECT COUNT(bi.id) FROM order_orderpackage bi WHERE bi.order_id = order_order.id ) end\n               \n               ,order_order.options->'courier' -- c.name\n               ,coalesce((SELECT cty.name  FROM address_address adres, address_city cty where adres.id=order_order.shipping_address_id and cty.id = adres.city_id ),'') as city  \n    \t\t   ,order_order.options->'shop' as shop\n               ,order_order.source as order_source\n               ,coalesce((SELECT com.name FROM company_company com where com.id = order_order.company_id),'') as company\n               ,coalesce((SELECT sum(ip.quantity) FROM invoice_invoiceproducts ip where ip.invoice_id = invoice_invoice.id),0) as invoice_total_quantity\n                     \n               ,coalesce((SELECT country.name  FROM address_address adres, address_city cty, address_country country where adres.id=order_order.shipping_address_id and cty.id = adres.city_id and cty.country_id = country.id),'') as country\n               ,order_order.options->'has_selling_return_invoice'\n               ,order_order.created_at\n               ,invoice_invoice.ettn\n               \n\n    \n            FROM invoice_invoice INNER JOIN order_order ON invoice_invoice.order_id = order_order.id\n            LEFT JOIN company_company company ON company.id = order_order.company_id\n            \n            \n                \n            -- LEFT JOIN cargo_courier c ON c.id = order_order.courier_id\n        where 1=1  and invoice_invoice.date BETWEEN '2025-02-01 00:00:00' AND '2025-02-28 23:59:59' ) as foo  \n \n \n Filters \n \n where 1=1  and invoice_invoice.date BETWEEN '2025-02-01 00:00:00' AND '2025-02-28 23:59:59'",
            "created_by": "ismail.ala",
            "deleted_by": "",
            "page_name": "Fatura Listesi",
            "end_time": "2025/03/10 16:14:20",
            "difference_text": "0:00:02",
            "cancelled_at": "",
            "is_deleted_from_storage": false,
            "unique_code": "81f10cf5-a6d9-4609-b1b4-1d920ee5c8c3",
            "slug": "",
            "deleted_at": "",
            "id": "151"
        },
        {
            "statu": "Ba\u015far\u0131l\u0131",
            "is_error": false,
            "start_time": "2025/03/06 10:38:51",
            "cancelled_by": "",
            "url": "https://s3.eu-west-1.amazonaws.com/cdn-tekbas/report_excel/001077fa-77f5-4c79-801a-0f03d8ee0456/invoice_list_2025-03-06_10-38-53.xls",
            "created_at": "06/03/2025 10:38:51",
            "data_query": "select * from ( \n            SELECT\n                invoice_invoice.id as invoice_id,\n                invoice_invoice.serial_no,\n                invoice_invoice.no,\n                invoice_invoice.is_sent invoice_is_sent,\n                invoice_invoice.options->'customer_supplier', -- (case when invoice_invoice.supplier_id is not Null then (select name from supplier_supplier where id = invoice_invoice.supplier_id) else (SELECT -- -- name FROM customer_customer WHERE id = invoice_invoice.customer_id) end) as supplier_customer,\n                invoice_invoice.date,\n                invoice_invoice.time,\n                invoice_invoice.type as invoice_type,\n                invoice_invoice.is_waybill,\n                invoice_invoice.total_price,\n                invoice_invoice.total_discount_without_vat,\n                invoice_invoice.total_discount,\n                invoice_invoice.total_vat,\n                invoice_invoice.total,\n                invoice_invoice.is_cancelled invoice_state,\n                order_order.id as order_id,\n                order_order.tracker_code,\n                order_order.options->'customer_name', --(SELECT name FROM customer_customer WHERE id = invoice_invoice.customer_id),\n                order_order.is_cargo_sent,\n                order_order.is_closed,\n                order_order.is_cancelled as o_is_cancelled,\n                order_order.type as order_type,\n                invoice_invoice.options->'full_returned' as full_returned, -- CASE WHEN (SELECT COUNT(*) FROM invoice_invoice WHERE invoice_invoice.order_id = order_order.id AND is_full_return) > 0 THEN true ELSE false END as full_returned,\n                invoice_invoice.total_quantity as adet, --(select SUM(ip.quantity) from invoice_invoiceproducts ip where ip.invoice_id = invoice_invoice.id) adet,\n                -- (select array_to_string(array_agg(i.serial_no||i.no),',')\n                --     from invoice_invoice as i, invoice_invoice_reference_invoices as ri\n                --     where ri.from_invoice_id=invoice_invoice.id\n                --     and i.id=ri.to_invoice_id) as reference_invoice,\n                invoice_invoice.options->'reference_invoices' as reference_invoice,\n                order_order.created_at as order_date,\n                invoice_invoice.options->'reference_invoice_date' as referans_fatura_tarih, \n                -- (select i.date\n                --    from invoice_invoice as i, invoice_invoice_reference_invoices as ri\n                --    where ri.from_invoice_id=invoice_invoice.id\n                --    and i.id=ri.to_invoice_id and i.type = 7 LIMIT 1) as referans_fatura_tarih,\n               invoice_invoice.is_consignment,\n               invoice_invoice.is_approved,\n               order_order.external_tracker_code,\n               order_order.name,\n               order_order.is_sent order_is_sent,\n               invoice_invoice.invoice_numbers,\n               invoice_invoice.options->'currency' as currency, -- (select currency_currency.name from currency_currency Where id=invoice_invoice.currency_id) as currency,\n               case when (SELECT COUNT(bi.id) FROM order_orderpackage bi WHERE bi.order_id = order_order.id ) = 0 then coalesce((order_order.options->'box_count')::bigint,1) else (SELECT COUNT(bi.id) FROM order_orderpackage bi WHERE bi.order_id = order_order.id ) end\n               \n               ,order_order.options->'courier' -- c.name\n               ,coalesce((SELECT cty.name  FROM address_address adres, address_city cty where adres.id=order_order.shipping_address_id and cty.id = adres.city_id ),'') as city  \n    \t\t   ,order_order.options->'shop' as shop\n               ,order_order.source as order_source\n               ,coalesce((SELECT com.name FROM company_company com where com.id = order_order.company_id),'') as company\n               ,coalesce((SELECT sum(ip.quantity) FROM invoice_invoiceproducts ip where ip.invoice_id = invoice_invoice.id),0) as invoice_total_quantity\n                     \n               ,coalesce((SELECT country.name  FROM address_address adres, address_city cty, address_country country where adres.id=order_order.shipping_address_id and cty.id = adres.city_id and cty.country_id = country.id),'') as country\n               ,order_order.options->'has_selling_return_invoice'\n               ,order_order.created_at\n               ,invoice_invoice.ettn\n               \n\n    \n            FROM invoice_invoice INNER JOIN order_order ON invoice_invoice.order_id = order_order.id\n            LEFT JOIN company_company company ON company.id = order_order.company_id\n            \n            \n                \n            -- LEFT JOIN cargo_courier c ON c.id = order_order.courier_id\n        where 1=1  and invoice_invoice.date BETWEEN '2025-02-01 00:00:00' AND '2025-02-28 23:59:59' ) as foo  \n \n \n Filters \n \n where 1=1  and invoice_invoice.date BETWEEN '2025-02-01 00:00:00' AND '2025-02-28 23:59:59'",
            "created_by": "ismail.ala",
            "deleted_by": "",
            "page_name": "Fatura Listesi",
            "end_time": "2025/03/06 10:38:53",
            "difference_text": "0:00:02",
            "cancelled_at": "",
            "is_deleted_from_storage": false,
            "unique_code": "62c3d1e2-4a93-471e-acbe-ecddcabc9bcf",
            "slug": "",
            "deleted_at": "",
            "id": "150"
        },
        {
            "statu": "Ba\u015far\u0131l\u0131",
            "is_error": false,
            "start_time": "2025/02/20 16:46:57",
            "cancelled_by": "",
            "url": "https://s3.eu-west-1.amazonaws.com/cdn-tekbas/report_excel/da4c7333-9e8b-4b65-b0a8-4d5bac51922d/selling_orders_details_2025-02-20_16-46-57.xls",
            "created_at": "20/02/2025 16:46:57",
            "data_query": "SELECT * from (SELECT * FROM (\n            select\n                o.id as order_id, --0\n                o.tracker_code as tracker_code, --1\n                customer_customer.name as customer_name, --2\n                auth_user.username as terminal_user, --3\n                o.closed_at as closed_at, --4\n                o.cargo_sent_at as cargo_sent_at, --5\n                o.order_status as order_state, --6\n                o.shipment_type as shipment_type, --7\n                customer_customer.id as customer_id, --8\n                o.type as order_type, --9\n                o.created_at as created_at, --10\n                o.options->'type' as order_options_type, --11\n                customer_customer.email as customer_email, --12\n                city.name as city, --13\n                township.name ilce, --14\n                -- (SELECT SUM(quantity - cancelled_quantity) FROM order_basketitem bi WHERE bi.order_id = o.id) AS quantity, --15\n                o.total_quantity as quantity, --15\n                customer_customer.id as customer_id, --16\n                cc.name as courier, --17\n                coalesce(au.username, '') as created_by, --18\n                o.shipping_at as shipping_at, --19\n                o.source as source, --20\n                o.options->'shop' as shop, --21\n                co.name as country, --22\n                --(SELECT COUNT(bi.id) FROM order_basketitem bi WHERE bi.order_id = o.id and bi.is_cancelled = false) AS row_quantity, --23\n                o.options->'total_product_count' as row_quantity, --23\n                o.external_tracker_code as external_tracker_code, --24\n                o.is_packed as is_packed, --25\n                bi.name as name, --26\n                bi.code as code, --27\n                bi.barcode as barcode, --28\n                pms.brand as brand, --29\n                bi.quantity-bi.cancelled_quantity, --30\n                bi.selling_price as selling_price, --31\n                o.options->'cargo_campaign_code' as cargo_campaign_code, --32\n                pms.option_value as option_value, --33\n                o.options-> 'erp_created_at' as order_action_created_at, --34\n                a.address1 as shipping_address, --35\n                ba.address1 as billing_address, --36\n                bcity.name as bcity, --37\n                btownship.name btownship, --38\n                a.first_name || ' ' || a.last_name, --39\n                ba.first_name || ' ' || ba.last_name, --40\n                bi.row_total as row_total, --41\n                bi.product_type as product_type, --42\n                coalesce(pms.main_color, '')||' '||coalesce(((p.analytics->'options')::JSON)->>'Uzuv', '')||' '||coalesce(((p.analytics->'options')::JSON)->>'Boyut', '') as color, --43\n                pms.shelved_quantity as shelved_quantity, --44\n                a.address_title, --45\n                ba.address_title, --46\n                o.explanation, --47\n                o.note, --48\n                a.phone, --49\n                ba.phone, --50\n                 (select\n                   string_agg(cast(oo.tracker_code as varchar), ',')  as reference_order_ids\n                    from\n                       order_order_reference_orders as ooro \n                       inner join\n                          order_order as oo \n                          on oo.id = ooro.to_order_id \n                    where\n                       ooro.from_order_id = o.id \n                    group by\n                       ooro.from_order_id) as reference_order_ids -- 51\n                , o.options->'shipping_company' as shipping_company --52\n                , ro.tracker_code as route_tracker_code --53\n                ,coalesce((SELECT com.name FROM company_company com where com.id = o.company_id),'') as company --54\n                ,array_to_string(array_agg(distinct bi.supplier_color),', ') as supplier_color --55\n                --,bi.code || '' || coalesce(((p.analytics->'options')::JSON)->>'ColorCode', '') || '' || pms.option_value as model_code --56\n                ,pms.data->'sku' as model_code --56\n                ,'' --57\n                ,'' --58\n                ,'' --59\n                ,o.picked_at --60\n                ,o.payment_type --61\n                ,bi.vat --62\n                ,bi.selling_price_without_vat --63\n                ,bi.options->'bundle_barcode' --64\n                ,ci.cargo_delivered_at --65\n                ,bi.reserved_quantity_for_delivery --66\n                ,coalesce(pms.data -> 'supplier', '') as supplier_name --67\n                ,coalesce(pms.data -> 'supplier_discount_ratio', '') as supplier_discount_ratio --68\n                ,coalesce(((p.analytics->'options')::JSON)->>'AuthorNames', '') as author_names --69\n                ,coalesce(((p.analytics->'options')::JSON)->>'StockStatus', '') as stock_status --70\n                ,p.deci as deci --71\n                ,bi.quantity as first_product_quantity --72\n                ,bi.cancelled_quantity as cancelled_quantity --73\n                ,bi.returned_quantity as returned_quantity --74\n                ,o.options->'commission' as commission -- 75\n                ,pms.data->'ean' as ean --76\n                ,bi.picked_quantity as picked_quantity --77\n                ,bisp.selling_price as selling_shop_price --78 satis anindaki fiyat\n                ,o.total + o.shipping_amount --79\n                ,cg.name as category_group --80\n                ,bi.options ->'shop_price' as shop_price --81\n                ,bi.is_returned as is_returned --82\n                ,bi.selling_price --83\n                ,o.discount --84\n                ,o.options->'total_product_count' --85\n                ,pc.code as proforma_currency --86\n                ,coalesce(((p.analytics->'options')::JSON)->>'class', '') as product_class --87\n                ,o.deci as deci --88\n                ,p.origin --89\n                ,bi.discount as bi_discount --90\n                ,bi.external_id as external_id --91\n\n            \n                from order_order o\n                inner join customer_customer on o.customer_id = customer_customer.id\n                left join address_address a on a.id = o.shipping_address_id\n                left join address_city city on a.city_id = city.id\n                left join address_country co on city.country_id = co.id\n                left join address_township township on a.township_id = township.id\n                left join address_address ba on ba.id = o.billing_address_id\n                left join address_city bcity on ba.city_id = bcity.id\n                left join address_country bco on city.country_id = bco.id\n                left join address_township btownship on ba.township_id = btownship.id\n                left outer join order_picking op on op.order_id = o.id\n                left join order_route ro on op.route_id = ro.id\n                left join auth_user on o.terminal_user_id = auth_user.id\n                left join auth_user au on o.created_by_id = au.id\n                left join cargo_courier cc on cc.id = o.courier_id\n                left join order_orderaction oa on oa.order_id = o.id\n                left join cargo_cargoinfo ci on ci.order_id = o.id\n                inner join order_basketitem bi on bi.order_id = o.id\n                \n                inner join report_productmetasummary pms on bi.product_meta_id = pms.pm_id\n                left join mainproduct_productmeta pm on bi.product_meta_id = pm.id\n                left join mainproduct_product p on pm.product_id = p.id\n                left join mainproduct_mainproduct mp on p.mainproduct_id = mp.id\n                left join mainproduct_categorygroup cg on mp.category_group_id = cg.id\n                --left join order_cancellationreason oc on oc.cancelled_item_id=bi.id\n                left join order_basketitemshopproducts bisp on bisp.basket_item_id=bi.id\n                left join currency_currency pc on pc.id = o.proform_currency_id\n                \n            \n        where\n        true\n          and o.type in (2,4,3,5,6,9,12,27,25,14,15,29)  AND o.created_at between '2025-01-21 00:00:00' and '2025-02-20 23:59:59'  AND o.tracker_code IN ('TS20023127','TS30013065') \n         \n         group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,\n            18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,\n            39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92\n         order by o.created_at desc\n    ) as bar  WHERE order_state in ('waiting')  ) as fos where 1=1  \n \n \n Filters \n \n   and o.type in (2,4,3,5,6,9,12,27,25,14,15,29)  AND o.created_at between '2025-01-21 00:00:00' and '2025-02-20 23:59:59'  AND o.tracker_code IN ('TS20023127','TS30013065')   ",
            "created_by": "yasin",
            "deleted_by": "",
            "page_name": "Sipari\u015f \u00dcr\u00fcn Listesi",
            "end_time": "2025/02/20 16:46:57",
            "difference_text": "0:00:00",
            "cancelled_at": "",
            "is_deleted_from_storage": false,
            "unique_code": "6b9b993c-802f-43db-95fe-524a2c8788a8",
            "slug": "",
            "deleted_at": "",
            "id": "149"
        },
        {
            "statu": "Ba\u015far\u0131l\u0131",
            "is_error": false,
            "start_time": "2025/02/10 10:57:16",
            "cancelled_by": "",
            "url": "https://s3.eu-west-1.amazonaws.com/cdn-tekbas/report_excel/2bf56c7d-6540-4257-b227-6760f91061b5/666_2025-02-10_10-57-18.xls",
            "created_at": "10/02/2025 10:57:16",
            "data_query": "select * from ( \n            SELECT\n                invoice_invoice.id as invoice_id,\n                invoice_invoice.serial_no,\n                invoice_invoice.no,\n                invoice_invoice.is_sent invoice_is_sent,\n                invoice_invoice.options->'customer_supplier', -- (case when invoice_invoice.supplier_id is not Null then (select name from supplier_supplier where id = invoice_invoice.supplier_id) else (SELECT -- -- name FROM customer_customer WHERE id = invoice_invoice.customer_id) end) as supplier_customer,\n                invoice_invoice.date,\n                invoice_invoice.time,\n                invoice_invoice.type as invoice_type,\n                invoice_invoice.is_waybill,\n                invoice_invoice.total_price,\n                invoice_invoice.total_discount_without_vat,\n                invoice_invoice.total_discount,\n                invoice_invoice.total_vat,\n                invoice_invoice.total,\n                invoice_invoice.is_cancelled invoice_state,\n                order_order.id as order_id,\n                order_order.tracker_code,\n                order_order.options->'customer_name', --(SELECT name FROM customer_customer WHERE id = invoice_invoice.customer_id),\n                order_order.is_cargo_sent,\n                order_order.is_closed,\n                order_order.is_cancelled as o_is_cancelled,\n                order_order.type as order_type,\n                invoice_invoice.options->'full_returned' as full_returned, -- CASE WHEN (SELECT COUNT(*) FROM invoice_invoice WHERE invoice_invoice.order_id = order_order.id AND is_full_return) > 0 THEN true ELSE false END as full_returned,\n                invoice_invoice.total_quantity as adet, --(select SUM(ip.quantity) from invoice_invoiceproducts ip where ip.invoice_id = invoice_invoice.id) adet,\n                -- (select array_to_string(array_agg(i.serial_no||i.no),',')\n                --     from invoice_invoice as i, invoice_invoice_reference_invoices as ri\n                --     where ri.from_invoice_id=invoice_invoice.id\n                --     and i.id=ri.to_invoice_id) as reference_invoice,\n                invoice_invoice.options->'reference_invoices' as reference_invoice,\n                order_order.created_at as order_date,\n                invoice_invoice.options->'reference_invoice_date' as referans_fatura_tarih, \n                -- (select i.date\n                --    from invoice_invoice as i, invoice_invoice_reference_invoices as ri\n                --    where ri.from_invoice_id=invoice_invoice.id\n                --    and i.id=ri.to_invoice_id and i.type = 7 LIMIT 1) as referans_fatura_tarih,\n               invoice_invoice.is_consignment,\n               invoice_invoice.is_approved,\n               order_order.external_tracker_code,\n               order_order.name,\n               order_order.is_sent order_is_sent,\n               invoice_invoice.invoice_numbers,\n               invoice_invoice.options->'currency' as currency, -- (select currency_currency.name from currency_currency Where id=invoice_invoice.currency_id) as currency,\n               case when (SELECT COUNT(bi.id) FROM order_orderpackage bi WHERE bi.order_id = order_order.id ) = 0 then coalesce((order_order.options->'box_count')::bigint,1) else (SELECT COUNT(bi.id) FROM order_orderpackage bi WHERE bi.order_id = order_order.id ) end\n               \n               ,order_order.options->'courier' -- c.name\n               ,coalesce((SELECT cty.name  FROM address_address adres, address_city cty where adres.id=order_order.shipping_address_id and cty.id = adres.city_id ),'') as city  \n    \t\t   ,order_order.options->'shop' as shop\n               ,order_order.source as order_source\n               ,coalesce((SELECT com.name FROM company_company com where com.id = order_order.company_id),'') as company\n               ,coalesce((SELECT sum(ip.quantity) FROM invoice_invoiceproducts ip where ip.invoice_id = invoice_invoice.id),0) as invoice_total_quantity\n                     \n               ,coalesce((SELECT country.name  FROM address_address adres, address_city cty, address_country country where adres.id=order_order.shipping_address_id and cty.id = adres.city_id and cty.country_id = country.id),'') as country\n               ,order_order.options->'has_selling_return_invoice'\n               ,order_order.created_at\n               ,invoice_invoice.ettn\n               \n\n    \n            FROM invoice_invoice INNER JOIN order_order ON invoice_invoice.order_id = order_order.id\n            LEFT JOIN company_company company ON company.id = order_order.company_id\n            \n            \n                \n            -- LEFT JOIN cargo_courier c ON c.id = order_order.courier_id\n        where 1=1  and invoice_invoice.date BETWEEN '2025-01-01 00:00:00' AND '2025-01-31 23:59:59' ) as foo  \n \n \n Filters \n \n where 1=1  and invoice_invoice.date BETWEEN '2025-01-01 00:00:00' AND '2025-01-31 23:59:59'",
            "created_by": "ismail.ala",
            "deleted_by": "",
            "page_name": "Fatura Listesi",
            "end_time": "2025/02/10 10:57:18",
            "difference_text": "0:00:02",
            "cancelled_at": "",
            "is_deleted_from_storage": false,
            "unique_code": "bbd7e58e-f838-443b-86d6-6eafca1694e5",
            "slug": "666",
            "deleted_at": "",
            "id": "148"
        }
    ]
}
